package com.me.plugin.templates.add;

import static org.objectweb.asm.Opcodes.*;
import  org.objectweb.asm.Opcodes;


import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;

public class Template1 {

    public static void  fillfromCode(MethodVisitor methodVisitor){
        methodVisitor.visitCode();
        Label label0 = new Label();
        Label label1 = new Label();
        Label label2 = new Label();
        methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/io/IOException");
        Label label3 = new Label();
        Label label4 = new Label();
        methodVisitor.visitTryCatchBlock(label3, label0, label4, "java/lang/Exception");
        Label label5 = new Label();
        Label label6 = new Label();
        Label label7 = new Label();
        methodVisitor.visitTryCatchBlock(label5, label6, label7, "java/io/IOException");
        Label label8 = new Label();
        methodVisitor.visitTryCatchBlock(label3, label0, label8, null);
        methodVisitor.visitTryCatchBlock(label4, label5, label8, null);
        Label label9 = new Label();
        Label label10 = new Label();
        Label label11 = new Label();
        methodVisitor.visitTryCatchBlock(label9, label10, label11, "java/io/IOException");
        methodVisitor.visitTryCatchBlock(label8, label9, label8, null);
        Label label12 = new Label();
        methodVisitor.visitLabel(label12);
        methodVisitor.visitLineNumber(84, label12);
        methodVisitor.visitInsn(ACONST_NULL);
        methodVisitor.visitVarInsn(ASTORE, 1);
        methodVisitor.visitLabel(label3);
        methodVisitor.visitLineNumber(86, label3);
        methodVisitor.visitTypeInsn(NEW, "java/io/BufferedReader");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitTypeInsn(NEW, "java/io/FileReader");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitLdcInsn("/proc/net/arp");
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/FileReader", "<init>", "(Ljava/lang/String;)V", false);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/BufferedReader", "<init>", "(Ljava/io/Reader;)V", false);
        methodVisitor.visitVarInsn(ASTORE, 1);
        Label label13 = new Label();
        methodVisitor.visitLabel(label13);
        methodVisitor.visitLineNumber(88, label13);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/BufferedReader", "readLine", "()Ljava/lang/String;", false);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitVarInsn(ASTORE, 2);
        Label label14 = new Label();
        methodVisitor.visitLabel(label14);
        methodVisitor.visitJumpInsn(IFNULL, label0);
        Label label15 = new Label();
        methodVisitor.visitLabel(label15);
        methodVisitor.visitLineNumber(89, label15);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitLdcInsn(" +");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "split", "(Ljava/lang/String;)[Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE, 3);
        Label label16 = new Label();
        methodVisitor.visitLabel(label16);
        methodVisitor.visitLineNumber(90, label16);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitInsn(ARRAYLENGTH);
        Label label17 = new Label();
        methodVisitor.visitJumpInsn(IFLT, label17);
        Label label18 = new Label();
        methodVisitor.visitLabel(label18);
        methodVisitor.visitLineNumber(91, label18);
        methodVisitor.visitJumpInsn(GOTO, label0);
        methodVisitor.visitLabel(label17);
        methodVisitor.visitLineNumber(93, label17);
        methodVisitor.visitJumpInsn(GOTO, label13);
        methodVisitor.visitLabel(label0);
        methodVisitor.visitLineNumber(98, label0);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/BufferedReader", "close", "()V", false);
        methodVisitor.visitLabel(label1);
        methodVisitor.visitLineNumber(101, label1);
        Label label19 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label19);
        methodVisitor.visitLabel(label2);
        methodVisitor.visitLineNumber(99, label2);
        methodVisitor.visitVarInsn(ASTORE, 2);
        Label label20 = new Label();
        methodVisitor.visitLabel(label20);
        methodVisitor.visitLineNumber(100, label20);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/IOException", "printStackTrace", "()V", false);
        Label label21 = new Label();
        methodVisitor.visitLabel(label21);
        methodVisitor.visitLineNumber(102, label21);
        methodVisitor.visitJumpInsn(GOTO, label19);
        methodVisitor.visitLabel(label4);
        methodVisitor.visitLineNumber(94, label4);
        methodVisitor.visitVarInsn(ASTORE, 2);
        Label label22 = new Label();
        methodVisitor.visitLabel(label22);
        methodVisitor.visitLineNumber(95, label22);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Exception", "printStackTrace", "()V", false);
        methodVisitor.visitLabel(label5);
        methodVisitor.visitLineNumber(98, label5);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/BufferedReader", "close", "()V", false);
        methodVisitor.visitLabel(label6);
        methodVisitor.visitLineNumber(101, label6);
        methodVisitor.visitJumpInsn(GOTO, label19);
        methodVisitor.visitLabel(label7);
        methodVisitor.visitLineNumber(99, label7);
        methodVisitor.visitVarInsn(ASTORE, 2);
        Label label23 = new Label();
        methodVisitor.visitLabel(label23);
        methodVisitor.visitLineNumber(100, label23);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/IOException", "printStackTrace", "()V", false);
        Label label24 = new Label();
        methodVisitor.visitLabel(label24);
        methodVisitor.visitLineNumber(102, label24);
        methodVisitor.visitJumpInsn(GOTO, label19);
        methodVisitor.visitLabel(label8);
        methodVisitor.visitLineNumber(97, label8);
        methodVisitor.visitVarInsn(ASTORE, 4);
        methodVisitor.visitLabel(label9);
        methodVisitor.visitLineNumber(98, label9);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/BufferedReader", "close", "()V", false);
        methodVisitor.visitLabel(label10);
        methodVisitor.visitLineNumber(101, label10);
        Label label25 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label25);
        methodVisitor.visitLabel(label11);
        methodVisitor.visitLineNumber(99, label11);
        methodVisitor.visitVarInsn(ASTORE, 5);
        Label label26 = new Label();
        methodVisitor.visitLabel(label26);
        methodVisitor.visitLineNumber(100, label26);
        methodVisitor.visitVarInsn(ALOAD, 5);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/IOException", "printStackTrace", "()V", false);
        methodVisitor.visitLabel(label25);
        methodVisitor.visitLineNumber(102, label25);
        methodVisitor.visitVarInsn(ALOAD, 4);
        methodVisitor.visitInsn(ATHROW);
        methodVisitor.visitLabel(label19);
        methodVisitor.visitLineNumber(104, label19);
        methodVisitor.visitInsn(RETURN);
        Label label27 = new Label();
        methodVisitor.visitLabel(label27);
        methodVisitor.visitLocalVariable("splitted", "[Ljava/lang/String;", null, label16, label17, 3);
        methodVisitor.visitLocalVariable("line", "Ljava/lang/String;", null, label14, label0, 2);
        methodVisitor.visitLocalVariable("e", "Ljava/io/IOException;", null, label20, label21, 2);
        methodVisitor.visitLocalVariable("e", "Ljava/lang/Exception;", null, label22, label5, 2);
        methodVisitor.visitLocalVariable("e", "Ljava/io/IOException;", null, label23, label24, 2);
        methodVisitor.visitLocalVariable("e", "Ljava/io/IOException;", null, label26, label25, 5);
        methodVisitor.visitLocalVariable("br", "Ljava/io/BufferedReader;", null, label3, label27, 1);
        methodVisitor.visitMaxs(5, 6);
        methodVisitor.visitEnd();
    }
}
