package com.me.plugin.templates.add;

import static org.objectweb.asm.Opcodes.*;


import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.Type;

public class Template10 {

    public static void  fillfromCode(MethodVisitor methodVisitor){
        methodVisitor.visitCode();
        Label label0 = new Label();
        Label label1 = new Label();
        Label label2 = new Label();
        methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/IllegalAccessException");
        Label label3 = new Label();
        methodVisitor.visitTryCatchBlock(label0, label1, label3, "java/lang/IllegalArgumentException");
        Label label4 = new Label();
        methodVisitor.visitTryCatchBlock(label0, label1, label4, "java/lang/reflect/InvocationTargetException");
        Label label5 = new Label();
        Label label6 = new Label();
        Label label7 = new Label();
        methodVisitor.visitTryCatchBlock(label5, label6, label7, "java/lang/NoSuchMethodException");
        Label label8 = new Label();
        Label label9 = new Label();
        Label label10 = new Label();
        methodVisitor.visitTryCatchBlock(label8, label9, label10, "java/lang/ClassNotFoundException");
        Label label11 = new Label();
        methodVisitor.visitLabel(label11);
        methodVisitor.visitLineNumber(617, label11);
        methodVisitor.visitLdcInsn("b.so");
        methodVisitor.visitVarInsn(ASTORE, 0);
        Label label12 = new Label();
        methodVisitor.visitLabel(label12);
        methodVisitor.visitLineNumber(618, label12);
        methodVisitor.visitLdcInsn("a.so");
        methodVisitor.visitVarInsn(ASTORE, 1);
        Label label13 = new Label();
        methodVisitor.visitLabel(label13);
        methodVisitor.visitLineNumber(619, label13);
        methodVisitor.visitLdcInsn("c.so");
        methodVisitor.visitVarInsn(ASTORE, 2);
        Label label14 = new Label();
        methodVisitor.visitLabel(label14);
        methodVisitor.visitLineNumber(620, label14);
        methodVisitor.visitLdcInsn("persist.sys.dalvik.vm.lib");
        methodVisitor.visitVarInsn(ASTORE, 3);
        methodVisitor.visitLabel(label8);
        methodVisitor.visitLineNumber(622, label8);
        methodVisitor.visitLdcInsn("android.os.oo");
        Label label15 = new Label();
        methodVisitor.visitLabel(label15);
        methodVisitor.visitLineNumber(623, label15);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Class", "forName", "(Ljava/lang/String;)Ljava/lang/Class;", false);
        methodVisitor.visitVarInsn(ASTORE, 4);
        methodVisitor.visitLabel(label5);
        methodVisitor.visitLineNumber(625, label5);
        methodVisitor.visitVarInsn(ALOAD, 4);
        methodVisitor.visitLdcInsn("get");
        methodVisitor.visitInsn(ICONST_2);
        methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Class");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitLdcInsn(Type.getType("Ljava/lang/String;"));
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitLdcInsn(Type.getType("Ljava/lang/String;"));
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "getMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", false);
        methodVisitor.visitVarInsn(ASTORE, 5);
        Label label16 = new Label();
        methodVisitor.visitLabel(label16);
        methodVisitor.visitLineNumber(627, label16);
        methodVisitor.visitVarInsn(ALOAD, 5);
        methodVisitor.visitJumpInsn(IFNONNULL, label0);
        Label label17 = new Label();
        methodVisitor.visitLabel(label17);
        methodVisitor.visitLineNumber(628, label17);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitLdcInsn("WTF?!");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        methodVisitor.visitLabel(label0);
        methodVisitor.visitLineNumber(631, label0);
        methodVisitor.visitFrame(Opcodes.F_NEW, 6, new Object[] {"java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/Class", "java/lang/reflect/Method"}, 0, new Object[] {});
        methodVisitor.visitVarInsn(ALOAD, 5);
        methodVisitor.visitVarInsn(ALOAD, 4);
        methodVisitor.visitInsn(ICONST_2);
        methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitLdcInsn("Dalvik");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/reflect/Method", "invoke", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", false);
        methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
        methodVisitor.visitVarInsn(ASTORE, 6);
        Label label18 = new Label();
        methodVisitor.visitLabel(label18);
        methodVisitor.visitLineNumber(634, label18);
        methodVisitor.visitLdcInsn("b.so");
        methodVisitor.visitVarInsn(ALOAD, 6);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
        Label label19 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label19);
        Label label20 = new Label();
        methodVisitor.visitLabel(label20);
        methodVisitor.visitLineNumber(635, label20);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitLdcInsn("Dalvik");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label21 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label21);
        methodVisitor.visitLabel(label19);
        methodVisitor.visitLineNumber(636, label19);
        methodVisitor.visitFrame(Opcodes.F_NEW, 7, new Object[] {"java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/Class", "java/lang/reflect/Method", "java/lang/String"}, 0, new Object[] {});
        methodVisitor.visitLdcInsn("a.so");
        methodVisitor.visitVarInsn(ALOAD, 6);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
        Label label22 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label22);
        Label label23 = new Label();
        methodVisitor.visitLabel(label23);
        methodVisitor.visitLineNumber(637, label23);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitLdcInsn("ART");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        methodVisitor.visitJumpInsn(GOTO, label21);
        methodVisitor.visitLabel(label22);
        methodVisitor.visitLineNumber(638, label22);
        methodVisitor.visitFrame(Opcodes.F_NEW, 7, new Object[] {"java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/Class", "java/lang/reflect/Method", "java/lang/String"}, 0, new Object[] {});
        methodVisitor.visitLdcInsn("c.so");
        methodVisitor.visitVarInsn(ALOAD, 6);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
        methodVisitor.visitJumpInsn(IFEQ, label21);
        Label label24 = new Label();
        methodVisitor.visitLabel(label24);
        methodVisitor.visitLineNumber(639, label24);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitLdcInsn("ART debug build");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        methodVisitor.visitLabel(label21);
        methodVisitor.visitLineNumber(642, label21);
        methodVisitor.visitFrame(Opcodes.F_NEW, 7, new Object[] {"java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/Class", "java/lang/reflect/Method", "java/lang/String"}, 0, new Object[] {});
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitVarInsn(ALOAD, 6);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        methodVisitor.visitLabel(label1);
        methodVisitor.visitLineNumber(649, label1);
        methodVisitor.visitJumpInsn(GOTO, label6);
        methodVisitor.visitLabel(label2);
        methodVisitor.visitLineNumber(643, label2);
        methodVisitor.visitFrame(Opcodes.F_NEW, 6, new Object[] {"java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/Class", "java/lang/reflect/Method"}, 1, new Object[] {"java/lang/IllegalAccessException"});
        methodVisitor.visitVarInsn(ASTORE, 6);
        Label label25 = new Label();
        methodVisitor.visitLabel(label25);
        methodVisitor.visitLineNumber(644, label25);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitLdcInsn("IllegalAccessException");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label26 = new Label();
        methodVisitor.visitLabel(label26);
        methodVisitor.visitLineNumber(649, label26);
        methodVisitor.visitJumpInsn(GOTO, label6);
        methodVisitor.visitLabel(label3);
        methodVisitor.visitLineNumber(645, label3);
        methodVisitor.visitFrame(Opcodes.F_NEW, 6, new Object[] {"java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/Class", "java/lang/reflect/Method"}, 1, new Object[] {"java/lang/IllegalArgumentException"});
        methodVisitor.visitVarInsn(ASTORE, 6);
        Label label27 = new Label();
        methodVisitor.visitLabel(label27);
        methodVisitor.visitLineNumber(646, label27);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitLdcInsn("IllegalArgumentException");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label28 = new Label();
        methodVisitor.visitLabel(label28);
        methodVisitor.visitLineNumber(649, label28);
        methodVisitor.visitJumpInsn(GOTO, label6);
        methodVisitor.visitLabel(label4);
        methodVisitor.visitLineNumber(647, label4);
        methodVisitor.visitFrame(Opcodes.F_NEW, 6, new Object[] {"java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/Class", "java/lang/reflect/Method"}, 1, new Object[] {"java/lang/reflect/InvocationTargetException"});
        methodVisitor.visitVarInsn(ASTORE, 6);
        Label label29 = new Label();
        methodVisitor.visitLabel(label29);
        methodVisitor.visitLineNumber(648, label29);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitLdcInsn("InvocationTargetException");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        methodVisitor.visitLabel(label6);
        methodVisitor.visitLineNumber(652, label6);
        methodVisitor.visitFrame(Opcodes.F_NEW, 5, new Object[] {"java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/Class"}, 0, new Object[] {});
        methodVisitor.visitJumpInsn(GOTO, label9);
        methodVisitor.visitLabel(label7);
        methodVisitor.visitLineNumber(650, label7);
        methodVisitor.visitFrame(Opcodes.F_NEW, 5, new Object[] {"java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String", "java/lang/Class"}, 1, new Object[] {"java/lang/NoSuchMethodException"});
        methodVisitor.visitVarInsn(ASTORE, 5);
        Label label30 = new Label();
        methodVisitor.visitLabel(label30);
        methodVisitor.visitLineNumber(651, label30);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitLdcInsn("SystemProperties.get(String key, String def) method is not found");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        methodVisitor.visitLabel(label9);
        methodVisitor.visitLineNumber(655, label9);
        methodVisitor.visitFrame(Opcodes.F_NEW, 4, new Object[] {"java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String"}, 0, new Object[] {});
        Label label31 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label31);
        methodVisitor.visitLabel(label10);
        methodVisitor.visitLineNumber(653, label10);
        methodVisitor.visitFrame(Opcodes.F_NEW, 4, new Object[] {"java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String"}, 1, new Object[] {"java/lang/ClassNotFoundException"});
        methodVisitor.visitVarInsn(ASTORE, 4);
        Label label32 = new Label();
        methodVisitor.visitLabel(label32);
        methodVisitor.visitLineNumber(654, label32);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitLdcInsn("SystemProperties class is not found");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        methodVisitor.visitLabel(label31);
        methodVisitor.visitLineNumber(656, label31);
        methodVisitor.visitFrame(Opcodes.F_NEW, 4, new Object[] {"java/lang/String", "java/lang/String", "java/lang/String", "java/lang/String"}, 0, new Object[] {});
        methodVisitor.visitInsn(RETURN);
        Label label33 = new Label();
        methodVisitor.visitLabel(label33);
        methodVisitor.visitLocalVariable("value", "Ljava/lang/String;", null, label18, label1, 6);
        methodVisitor.visitLocalVariable("e", "Ljava/lang/IllegalAccessException;", null, label25, label26, 6);
        methodVisitor.visitLocalVariable("e", "Ljava/lang/IllegalArgumentException;", null, label27, label28, 6);
        methodVisitor.visitLocalVariable("e", "Ljava/lang/reflect/InvocationTargetException;", null, label29, label6, 6);
        methodVisitor.visitLocalVariable("get", "Ljava/lang/reflect/Method;", null, label16, label6, 5);
        methodVisitor.visitLocalVariable("e", "Ljava/lang/NoSuchMethodException;", null, label30, label9, 5);
        methodVisitor.visitLocalVariable("systemProperties", "Ljava/lang/Class;", "Ljava/lang/Class<*>;", label5, label9, 4);
        methodVisitor.visitLocalVariable("e", "Ljava/lang/ClassNotFoundException;", null, label32, label31, 4);
        methodVisitor.visitLocalVariable("LIB_DALVIK", "Ljava/lang/String;", null, label12, label33, 0);
        methodVisitor.visitLocalVariable("LIB_ART", "Ljava/lang/String;", null, label13, label33, 1);
        methodVisitor.visitLocalVariable("LIB_ART_D", "Ljava/lang/String;", null, label14, label33, 2);
        methodVisitor.visitLocalVariable("SELECT_RUNTIME_PROPERTY", "Ljava/lang/String;", null, label8, label33, 3);
        methodVisitor.visitMaxs(6, 7);
        methodVisitor.visitEnd();
    }
}
