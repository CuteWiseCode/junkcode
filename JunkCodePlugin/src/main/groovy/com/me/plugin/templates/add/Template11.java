package com.me.plugin.templates.add;

import static org.objectweb.asm.Opcodes.*;
import  org.objectweb.asm.Opcodes;


import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;

public class Template11 {

    public static void  fillfromCode(MethodVisitor methodVisitor){
        methodVisitor.visitCode();
        Label label0 = new Label();
        Label label1 = new Label();
        Label label2 = new Label();
        methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/io/FileNotFoundException");
        Label label3 = new Label();
        Label label4 = new Label();
        Label label5 = new Label();
        methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/security/NoSuchAlgorithmException");
        methodVisitor.visitTryCatchBlock(label3, label4, label5, "javax/crypto/NoSuchPaddingException");
        Label label6 = new Label();
        Label label7 = new Label();
        Label label8 = new Label();
        methodVisitor.visitTryCatchBlock(label6, label7, label8, "java/io/IOException");
        Label label9 = new Label();
        methodVisitor.visitLabel(label9);
        methodVisitor.visitLineNumber(659, label9);
        methodVisitor.visitInsn(ACONST_NULL);
        methodVisitor.visitVarInsn(ASTORE, 1);
        methodVisitor.visitLabel(label0);
        methodVisitor.visitLineNumber(661, label0);
        methodVisitor.visitTypeInsn(NEW, "java/io/FileInputStream");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitLdcInsn("/temp/temp.apk");
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/FileInputStream", "<init>", "(Ljava/lang/String;)V", false);
        methodVisitor.visitVarInsn(ASTORE, 1);
        methodVisitor.visitLabel(label1);
        methodVisitor.visitLineNumber(664, label1);
        Label label10 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label10);
        methodVisitor.visitLabel(label2);
        methodVisitor.visitLineNumber(662, label2);
        methodVisitor.visitVarInsn(ASTORE, 2);
        Label label11 = new Label();
        methodVisitor.visitLabel(label11);
        methodVisitor.visitLineNumber(663, label11);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/FileNotFoundException", "printStackTrace", "()V", false);
        methodVisitor.visitLabel(label10);
        methodVisitor.visitLineNumber(665, label10);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 2);
        Label label12 = new Label();
        methodVisitor.visitLabel(label12);
        methodVisitor.visitLineNumber(666, label12);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitIntInsn(NEWARRAY, T_BYTE);
        methodVisitor.visitVarInsn(ASTORE, 3);
        Label label13 = new Label();
        methodVisitor.visitLabel(label13);
        methodVisitor.visitLineNumber(668, label13);
        methodVisitor.visitInsn(ACONST_NULL);
        methodVisitor.visitVarInsn(ASTORE, 5);
        methodVisitor.visitLabel(label3);
        methodVisitor.visitLineNumber(670, label3);
        methodVisitor.visitLdcInsn("aab");
        methodVisitor.visitMethodInsn(INVOKESTATIC, "javax/crypto/Cipher", "getInstance", "(Ljava/lang/String;)Ljavax/crypto/Cipher;", false);
        methodVisitor.visitVarInsn(ASTORE, 5);
        methodVisitor.visitLabel(label4);
        methodVisitor.visitLineNumber(673, label4);
        Label label14 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label14);
        methodVisitor.visitLabel(label5);
        methodVisitor.visitLineNumber(671, label5);
        methodVisitor.visitVarInsn(ASTORE, 6);
        Label label15 = new Label();
        methodVisitor.visitLabel(label15);
        methodVisitor.visitLineNumber(672, label15);
        methodVisitor.visitVarInsn(ALOAD, 6);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/security/GeneralSecurityException", "printStackTrace", "()V", false);
        methodVisitor.visitLabel(label14);
        methodVisitor.visitLineNumber(675, label14);
        methodVisitor.visitIntInsn(SIPUSH, 512);
        methodVisitor.visitIntInsn(NEWARRAY, T_BYTE);
        methodVisitor.visitVarInsn(ASTORE, 7);
        Label label16 = new Label();
        methodVisitor.visitLabel(label16);
        methodVisitor.visitLineNumber(676, label16);
        methodVisitor.visitVarInsn(ILOAD, 2);
        Label label17 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label17);
        Label label18 = new Label();
        methodVisitor.visitLabel(label18);
        methodVisitor.visitLineNumber(677, label18);
        methodVisitor.visitInsn(ICONST_M1);
        methodVisitor.visitInsn(IRETURN);
        methodVisitor.visitLabel(label17);
        methodVisitor.visitLineNumber(679, label17);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 4);
        Label label19 = new Label();
        methodVisitor.visitLabel(label19);
        methodVisitor.visitLineNumber(680, label19);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 6);
        Label label20 = new Label();
        methodVisitor.visitLabel(label20);
        methodVisitor.visitLineNumber(682, label20);
        methodVisitor.visitVarInsn(ILOAD, 6);
        methodVisitor.visitVarInsn(ISTORE, 8);
        Label label21 = new Label();
        methodVisitor.visitLabel(label21);
        methodVisitor.visitLineNumber(683, label21);
        methodVisitor.visitVarInsn(ILOAD, 8);
        Label label22 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label22);
        Label label23 = new Label();
        methodVisitor.visitLabel(label23);
        methodVisitor.visitLineNumber(684, label23);
        methodVisitor.visitVarInsn(ILOAD, 8);
        methodVisitor.visitInsn(IRETURN);
        methodVisitor.visitLabel(label22);
        methodVisitor.visitLineNumber(686, label22);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 9);
        methodVisitor.visitLabel(label6);
        methodVisitor.visitLineNumber(688, label6);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitVarInsn(ALOAD, 7);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/InputStream", "read", "([B)I", false);
        methodVisitor.visitVarInsn(ISTORE, 9);
        methodVisitor.visitLabel(label7);
        methodVisitor.visitLineNumber(691, label7);
        Label label24 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label24);
        methodVisitor.visitLabel(label8);
        methodVisitor.visitLineNumber(689, label8);
        methodVisitor.visitVarInsn(ASTORE, 10);
        Label label25 = new Label();
        methodVisitor.visitLabel(label25);
        methodVisitor.visitLineNumber(690, label25);
        methodVisitor.visitVarInsn(ALOAD, 10);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/IOException", "printStackTrace", "()V", false);
        methodVisitor.visitLabel(label24);
        methodVisitor.visitLineNumber(692, label24);
        methodVisitor.visitVarInsn(ILOAD, 9);
        methodVisitor.visitInsn(ICONST_M1);
        Label label26 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPNE, label26);
        Label label27 = new Label();
        methodVisitor.visitLabel(label27);
        methodVisitor.visitLineNumber(694, label27);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitVarInsn(ASTORE, 10);
        Label label28 = new Label();
        methodVisitor.visitLabel(label28);
        methodVisitor.visitLineNumber(695, label28);
        methodVisitor.visitVarInsn(ALOAD, 10);
        Label label29 = new Label();
        methodVisitor.visitJumpInsn(IFNULL, label29);
        methodVisitor.visitVarInsn(ALOAD, 10);
        methodVisitor.visitInsn(ARRAYLENGTH);
        Label label30 = new Label();
        methodVisitor.visitJumpInsn(IFNE, label30);
        methodVisitor.visitLabel(label29);
        methodVisitor.visitLineNumber(696, label29);
        methodVisitor.visitInsn(ICONST_M1);
        methodVisitor.visitInsn(IRETURN);
        methodVisitor.visitLabel(label30);
        methodVisitor.visitLineNumber(698, label30);
        methodVisitor.visitVarInsn(ALOAD, 10);
        methodVisitor.visitInsn(ARRAYLENGTH);
        methodVisitor.visitVarInsn(ISTORE, 6);
        Label label31 = new Label();
        methodVisitor.visitLabel(label31);
        methodVisitor.visitLineNumber(699, label31);
        methodVisitor.visitVarInsn(ILOAD, 6);
        methodVisitor.visitInsn(IRETURN);
        methodVisitor.visitLabel(label26);
        methodVisitor.visitLineNumber(701, label26);
        methodVisitor.visitVarInsn(ALOAD, 5);
        methodVisitor.visitVarInsn(ALOAD, 7);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ILOAD, 9);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "javax/crypto/Cipher", "update", "([BII)[B", false);
        methodVisitor.visitVarInsn(ASTORE, 3);
        Label label32 = new Label();
        methodVisitor.visitLabel(label32);
        methodVisitor.visitLineNumber(702, label32);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitVarInsn(ASTORE, 10);
        Label label33 = new Label();
        methodVisitor.visitLabel(label33);
        methodVisitor.visitLineNumber(703, label33);
        methodVisitor.visitVarInsn(ALOAD, 10);
        Label label34 = new Label();
        methodVisitor.visitJumpInsn(IFNULL, label34);
        Label label35 = new Label();
        methodVisitor.visitLabel(label35);
        methodVisitor.visitLineNumber(704, label35);
        methodVisitor.visitVarInsn(ALOAD, 10);
        methodVisitor.visitInsn(ARRAYLENGTH);
        methodVisitor.visitVarInsn(ISTORE, 6);
        methodVisitor.visitLabel(label34);
        methodVisitor.visitLineNumber(706, label34);
        methodVisitor.visitJumpInsn(GOTO, label20);
        Label label36 = new Label();
        methodVisitor.visitLabel(label36);
        methodVisitor.visitLocalVariable("e", "Ljava/io/FileNotFoundException;", null, label11, label10, 2);
        methodVisitor.visitLocalVariable("e", "Ljava/security/GeneralSecurityException;", null, label15, label14, 6);
        methodVisitor.visitLocalVariable("e", "Ljava/io/IOException;", null, label25, label24, 10);
        methodVisitor.visitLocalVariable("bArr", "[B", null, label28, label26, 10);
        methodVisitor.visitLocalVariable("i", "I", null, label21, label34, 8);
        methodVisitor.visitLocalVariable("read", "I", null, label6, label34, 9);
        methodVisitor.visitLocalVariable("bArr2", "[B", null, label33, label34, 10);
        methodVisitor.visitLocalVariable("in", "Ljava/io/InputStream;", null, label0, label36, 1);
        methodVisitor.visitLocalVariable("finalized", "Z", null, label12, label36, 2);
        methodVisitor.visitLocalVariable("buf", "[B", null, label13, label36, 3);
        methodVisitor.visitLocalVariable("bufOff", "I", null, label19, label36, 4);
        methodVisitor.visitLocalVariable("cipher", "Ljavax/crypto/Cipher;", null, label3, label36, 5);
        methodVisitor.visitLocalVariable("maxBuf", "I", null, label20, label36, 6);
        methodVisitor.visitLocalVariable("inputBuffer", "[B", null, label16, label36, 7);
        methodVisitor.visitMaxs(4, 11);
        methodVisitor.visitEnd();
    }
}
