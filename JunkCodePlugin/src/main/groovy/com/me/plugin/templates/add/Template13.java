package com.me.plugin.templates.add;

import static org.objectweb.asm.Opcodes.*;
import  org.objectweb.asm.Opcodes;

import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;

public class Template13 {

    public static void  fillfromCode(MethodVisitor methodVisitor){
        methodVisitor.visitCode();
        Label label0 = new Label();
        Label label1 = new Label();
        Label label2 = new Label();
        methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/Exception");
        Label label3 = new Label();
        methodVisitor.visitLabel(label3);
        methodVisitor.visitLineNumber(737, label3);
        methodVisitor.visitInsn(ICONST_2);
        methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/String");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitLdcInsn("b");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitVarInsn(ASTORE, 0);
        Label label4 = new Label();
        methodVisitor.visitLabel(label4);
        methodVisitor.visitLineNumber(738, label4);
        methodVisitor.visitInsn(ACONST_NULL);
        methodVisitor.visitVarInsn(ASTORE, 1);
        Label label5 = new Label();
        methodVisitor.visitLabel(label5);
        methodVisitor.visitLineNumber(739, label5);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitVarInsn(ISTORE, 2);
        Label label6 = new Label();
        methodVisitor.visitLabel(label6);
        methodVisitor.visitLineNumber(740, label6);
        methodVisitor.visitInsn(ACONST_NULL);
        methodVisitor.visitVarInsn(ASTORE, 3);
        Label label7 = new Label();
        methodVisitor.visitLabel(label7);
        methodVisitor.visitLineNumber(741, label7);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 4);
        Label label8 = new Label();
        methodVisitor.visitLabel(label8);
        methodVisitor.visitLineNumber(742, label8);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 5);
        Label label9 = new Label();
        methodVisitor.visitLabel(label9);
        methodVisitor.visitLineNumber(743, label9);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitVarInsn(ISTORE, 6);
        Label label10 = new Label();
        methodVisitor.visitLabel(label10);
        methodVisitor.visitLineNumber(744, label10);
        methodVisitor.visitLdcInsn(new Integer(2147483647));
        methodVisitor.visitVarInsn(ISTORE, 7);
        Label label11 = new Label();
        methodVisitor.visitLabel(label11);
        methodVisitor.visitLineNumber(745, label11);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 8);
        Label label12 = new Label();
        methodVisitor.visitLabel(label12);
        methodVisitor.visitLineNumber(746, label12);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 9);
        Label label13 = new Label();
        methodVisitor.visitLabel(label13);
        methodVisitor.visitLineNumber(747, label13);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 10);
        Label label14 = new Label();
        methodVisitor.visitLabel(label14);
        methodVisitor.visitLineNumber(748, label14);
        methodVisitor.visitLdcInsn("min-sdk-version");
        methodVisitor.visitVarInsn(ASTORE, 11);
        Label label15 = new Label();
        methodVisitor.visitLabel(label15);
        methodVisitor.visitLineNumber(749, label15);
        methodVisitor.visitLdcInsn("Mininimum");
        methodVisitor.visitVarInsn(ASTORE, 3);
        Label label16 = new Label();
        methodVisitor.visitLabel(label16);
        methodVisitor.visitLineNumber(750, label16);
        methodVisitor.visitTypeInsn(NEW, "java/util/Random");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/Random", "<init>", "()V", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextBoolean", "()Z", false);
        methodVisitor.visitVarInsn(ISTORE, 8);
        Label label17 = new Label();
        methodVisitor.visitLabel(label17);
        methodVisitor.visitLineNumber(751, label17);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitVarInsn(ISTORE, 10);
        Label label18 = new Label();
        methodVisitor.visitLabel(label18);
        methodVisitor.visitLineNumber(752, label18);
        methodVisitor.visitTypeInsn(NEW, "java/io/File");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitLdcInsn("/temp/apk");
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/File", "<init>", "(Ljava/lang/String;)V", false);
        methodVisitor.visitInsn(POP);
        Label label19 = new Label();
        methodVisitor.visitLabel(label19);
        methodVisitor.visitLineNumber(753, label19);
        methodVisitor.visitIntInsn(BIPUSH, 15);
        methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/String");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitInsn(ICONST_2);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitInsn(ICONST_3);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitInsn(ICONST_4);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitInsn(ICONST_5);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitIntInsn(BIPUSH, 6);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitIntInsn(BIPUSH, 7);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitIntInsn(BIPUSH, 8);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitIntInsn(BIPUSH, 9);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitIntInsn(BIPUSH, 10);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitIntInsn(BIPUSH, 11);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitIntInsn(BIPUSH, 12);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitIntInsn(BIPUSH, 13);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitIntInsn(BIPUSH, 14);
        methodVisitor.visitLdcInsn("a");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitVarInsn(ASTORE, 0);
        methodVisitor.visitLabel(label0);
        methodVisitor.visitLineNumber(756, label0);
        methodVisitor.visitTypeInsn(NEW, "java/util/Random");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/Random", "<init>", "()V", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextBoolean", "()Z", false);
        methodVisitor.visitVarInsn(ISTORE, 12);
        Label label20 = new Label();
        methodVisitor.visitLabel(label20);
        methodVisitor.visitLineNumber(757, label20);
        methodVisitor.visitVarInsn(ILOAD, 12);
        Label label21 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label21);
        Label label22 = new Label();
        methodVisitor.visitLabel(label22);
        methodVisitor.visitLineNumber(758, label22);
        methodVisitor.visitTypeInsn(NEW, "java/util/ArrayList");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", false);
        methodVisitor.visitVarInsn(ASTORE, 13);
        Label label23 = new Label();
        methodVisitor.visitLabel(label23);
        methodVisitor.visitLineNumber(759, label23);
        methodVisitor.visitVarInsn(ILOAD, 8);
        Label label24 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label24);
        Label label25 = new Label();
        methodVisitor.visitLabel(label25);
        methodVisitor.visitLineNumber(760, label25);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitLdcInsn("using");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label26 = new Label();
        methodVisitor.visitLabel(label26);
        methodVisitor.visitLineNumber(761, label26);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitLdcInsn(" using v1 scheme (JAR signing): ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label27 = new Label();
        methodVisitor.visitLabel(label27);
        methodVisitor.visitLineNumber(762, label27);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitLdcInsn(" using v2 scheme (APK Signature Scheme v2): ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label28 = new Label();
        methodVisitor.visitLabel(label28);
        methodVisitor.visitLineNumber(763, label28);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitLdcInsn("Number of signers: ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ALOAD, 13);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label29 = new Label();
        methodVisitor.visitLabel(label29);
        methodVisitor.visitLineNumber(764, label29);
        methodVisitor.visitVarInsn(ALOAD, 13);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
        methodVisitor.visitVarInsn(ASTORE, 14);
        Label label30 = new Label();
        methodVisitor.visitLabel(label30);
        methodVisitor.visitLineNumber(766, label30);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 15);
        Label label31 = new Label();
        methodVisitor.visitLabel(label31);
        methodVisitor.visitFrame(Opcodes.F_NEW, 16, new Object[] {"[Ljava/lang/String;", "java/io/File", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/util/List", "java/util/Iterator", Opcodes.INTEGER}, 0, new Object[] {});
        methodVisitor.visitVarInsn(ALOAD, 14);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
        methodVisitor.visitJumpInsn(IFEQ, label24);
        Label label32 = new Label();
        methodVisitor.visitLabel(label32);
        methodVisitor.visitLineNumber(767, label32);
        methodVisitor.visitVarInsn(ALOAD, 14);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
        methodVisitor.visitTypeInsn(CHECKCAST, "java/security/cert/X509Certificate");
        methodVisitor.visitVarInsn(ASTORE, 16);
        Label label33 = new Label();
        methodVisitor.visitLabel(label33);
        methodVisitor.visitLineNumber(768, label33);
        methodVisitor.visitVarInsn(ILOAD, 15);
        methodVisitor.visitVarInsn(ILOAD, 2);
        methodVisitor.visitInsn(IADD);
        methodVisitor.visitVarInsn(ISTORE, 15);
        Label label34 = new Label();
        methodVisitor.visitLabel(label34);
        methodVisitor.visitLineNumber(769, label34);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitLdcInsn("Signer #");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ILOAD, 15);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitLdcInsn(" certificate DN: ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ALOAD, 16);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/security/cert/X509Certificate", "getSubjectDN", "()Ljava/security/Principal;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label35 = new Label();
        methodVisitor.visitLabel(label35);
        methodVisitor.visitLineNumber(770, label35);
        methodVisitor.visitVarInsn(ALOAD, 16);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/security/cert/X509Certificate", "getEncoded", "()[B", false);
        methodVisitor.visitVarInsn(ASTORE, 17);
        Label label36 = new Label();
        methodVisitor.visitLabel(label36);
        methodVisitor.visitLineNumber(771, label36);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitLdcInsn("Signer #");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ILOAD, 15);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitLdcInsn(" certificate SHA-256 digest: ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label37 = new Label();
        methodVisitor.visitLabel(label37);
        methodVisitor.visitLineNumber(772, label37);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitLdcInsn("Signer #");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ILOAD, 15);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitLdcInsn(" certificate SHA-1 digest: ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label38 = new Label();
        methodVisitor.visitLabel(label38);
        methodVisitor.visitLineNumber(773, label38);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitLdcInsn("Signer #");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ILOAD, 15);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitLdcInsn(" certificate MD5 digest: ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label39 = new Label();
        methodVisitor.visitLabel(label39);
        methodVisitor.visitLineNumber(774, label39);
        methodVisitor.visitVarInsn(ALOAD, 16);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/security/cert/X509Certificate", "getPublicKey", "()Ljava/security/PublicKey;", false);
        methodVisitor.visitVarInsn(ASTORE, 18);
        Label label40 = new Label();
        methodVisitor.visitLabel(label40);
        methodVisitor.visitLineNumber(775, label40);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitLdcInsn("Signer #");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ILOAD, 15);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitLdcInsn(" key algorithm: ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ALOAD, 18);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/security/PublicKey", "getAlgorithm", "()Ljava/lang/String;", true);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label41 = new Label();
        methodVisitor.visitLabel(label41);
        methodVisitor.visitLineNumber(777, label41);
        methodVisitor.visitVarInsn(ALOAD, 18);
        methodVisitor.visitTypeInsn(INSTANCEOF, "java/security/interfaces/RSAKey");
        Label label42 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label42);
        Label label43 = new Label();
        methodVisitor.visitLabel(label43);
        methodVisitor.visitLineNumber(778, label43);
        methodVisitor.visitVarInsn(ALOAD, 18);
        methodVisitor.visitTypeInsn(CHECKCAST, "java/security/interfaces/RSAKey");
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/security/interfaces/RSAKey", "getModulus", "()Ljava/math/BigInteger;", true);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/math/BigInteger", "bitLength", "()I", false);
        methodVisitor.visitVarInsn(ISTORE, 19);
        Label label44 = new Label();
        methodVisitor.visitLabel(label44);
        Label label45 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label45);
        methodVisitor.visitLabel(label42);
        methodVisitor.visitLineNumber(779, label42);
        methodVisitor.visitFrame(Opcodes.F_NEW, 19, new Object[] {"[Ljava/lang/String;", "java/io/File", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/util/List", "java/util/Iterator", Opcodes.INTEGER, "java/security/cert/X509Certificate", "[B", "java/security/PublicKey"}, 0, new Object[] {});
        methodVisitor.visitVarInsn(ALOAD, 18);
        methodVisitor.visitTypeInsn(INSTANCEOF, "java/security/interfaces/ECKey");
        Label label46 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label46);
        Label label47 = new Label();
        methodVisitor.visitLabel(label47);
        methodVisitor.visitLineNumber(780, label47);
        methodVisitor.visitVarInsn(ALOAD, 18);
        methodVisitor.visitTypeInsn(CHECKCAST, "java/security/interfaces/ECKey");
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/security/interfaces/ECKey", "getParams", "()Ljava/security/spec/ECParameterSpec;", true);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/security/spec/ECParameterSpec", "getOrder", "()Ljava/math/BigInteger;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/math/BigInteger", "bitLength", "()I", false);
        methodVisitor.visitVarInsn(ISTORE, 19);
        Label label48 = new Label();
        methodVisitor.visitLabel(label48);
        methodVisitor.visitJumpInsn(GOTO, label45);
        methodVisitor.visitLabel(label46);
        methodVisitor.visitLineNumber(783, label46);
        methodVisitor.visitFrame(Opcodes.F_NEW, 19, new Object[] {"[Ljava/lang/String;", "java/io/File", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/util/List", "java/util/Iterator", Opcodes.INTEGER, "java/security/cert/X509Certificate", "[B", "java/security/PublicKey"}, 0, new Object[] {});
        methodVisitor.visitVarInsn(ALOAD, 18);
        methodVisitor.visitTypeInsn(INSTANCEOF, "java/security/interfaces/DSAKey");
        Label label49 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label49);
        methodVisitor.visitVarInsn(ALOAD, 18);
        methodVisitor.visitTypeInsn(CHECKCAST, "java/security/interfaces/DSAKey");
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/security/interfaces/DSAKey", "getParams", "()Ljava/security/interfaces/DSAParams;", true);
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitVarInsn(ASTORE, 20);
        Label label50 = new Label();
        methodVisitor.visitLabel(label50);
        methodVisitor.visitJumpInsn(IFNULL, label49);
        methodVisitor.visitVarInsn(ALOAD, 20);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/security/interfaces/DSAParams", "getP", "()Ljava/math/BigInteger;", true);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/math/BigInteger", "bitLength", "()I", false);
        Label label51 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label51);
        methodVisitor.visitLabel(label49);
        methodVisitor.visitFrame(Opcodes.F_NEW, 19, new Object[] {"[Ljava/lang/String;", "java/io/File", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/util/List", "java/util/Iterator", Opcodes.INTEGER, "java/security/cert/X509Certificate", "[B", "java/security/PublicKey"}, 0, new Object[] {});
        methodVisitor.visitInsn(ICONST_M1);
        methodVisitor.visitLabel(label51);
        methodVisitor.visitFrame(Opcodes.F_NEW, 19, new Object[] {"[Ljava/lang/String;", "java/io/File", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/util/List", "java/util/Iterator", Opcodes.INTEGER, "java/security/cert/X509Certificate", "[B", "java/security/PublicKey"}, 1, new Object[] {Opcodes.INTEGER});
        methodVisitor.visitVarInsn(ISTORE, 19);
        methodVisitor.visitLabel(label45);
        methodVisitor.visitLineNumber(786, label45);
        methodVisitor.visitFrame(Opcodes.F_NEW, 20, new Object[] {"[Ljava/lang/String;", "java/io/File", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/util/List", "java/util/Iterator", Opcodes.INTEGER, "java/security/cert/X509Certificate", "[B", "java/security/PublicKey", Opcodes.INTEGER}, 0, new Object[] {});
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitVarInsn(ASTORE, 20);
        Label label52 = new Label();
        methodVisitor.visitLabel(label52);
        methodVisitor.visitLineNumber(787, label52);
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitVarInsn(ASTORE, 21);
        Label label53 = new Label();
        methodVisitor.visitLabel(label53);
        methodVisitor.visitLineNumber(788, label53);
        methodVisitor.visitVarInsn(ALOAD, 21);
        methodVisitor.visitLdcInsn("Signer #");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitInsn(POP);
        Label label54 = new Label();
        methodVisitor.visitLabel(label54);
        methodVisitor.visitLineNumber(789, label54);
        methodVisitor.visitVarInsn(ALOAD, 21);
        methodVisitor.visitVarInsn(ILOAD, 15);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitInsn(POP);
        Label label55 = new Label();
        methodVisitor.visitLabel(label55);
        methodVisitor.visitLineNumber(790, label55);
        methodVisitor.visitVarInsn(ALOAD, 21);
        methodVisitor.visitLdcInsn(" key size (bits): ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitInsn(POP);
        Label label56 = new Label();
        methodVisitor.visitLabel(label56);
        methodVisitor.visitLineNumber(791, label56);
        methodVisitor.visitVarInsn(ALOAD, 21);
        methodVisitor.visitVarInsn(ILOAD, 19);
        methodVisitor.visitInsn(ICONST_M1);
        Label label57 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPEQ, label57);
        methodVisitor.visitVarInsn(ILOAD, 19);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(I)Ljava/lang/String;", false);
        Label label58 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label58);
        methodVisitor.visitLabel(label57);
        methodVisitor.visitFrame(Opcodes.F_NEW, 22, new Object[] {"[Ljava/lang/String;", "java/io/File", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/util/List", "java/util/Iterator", Opcodes.INTEGER, "java/security/cert/X509Certificate", "[B", "java/security/PublicKey", Opcodes.INTEGER, "java/io/PrintStream", "java/lang/StringBuilder"}, 1, new Object[] {"java/lang/StringBuilder"});
        methodVisitor.visitLdcInsn("n/a");
        methodVisitor.visitLabel(label58);
        methodVisitor.visitFrame(Opcodes.F_NEW, 22, new Object[] {"[Ljava/lang/String;", "java/io/File", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, "java/util/List", "java/util/Iterator", Opcodes.INTEGER, "java/security/cert/X509Certificate", "[B", "java/security/PublicKey", Opcodes.INTEGER, "java/io/PrintStream", "java/lang/StringBuilder"}, 2, new Object[] {"java/lang/StringBuilder", "java/lang/String"});
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitInsn(POP);
        Label label59 = new Label();
        methodVisitor.visitLabel(label59);
        methodVisitor.visitLineNumber(792, label59);
        methodVisitor.visitVarInsn(ALOAD, 20);
        methodVisitor.visitVarInsn(ALOAD, 21);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label60 = new Label();
        methodVisitor.visitLabel(label60);
        methodVisitor.visitLineNumber(793, label60);
        methodVisitor.visitVarInsn(ALOAD, 18);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/security/PublicKey", "getEncoded", "()[B", true);
        methodVisitor.visitVarInsn(ASTORE, 22);
        Label label61 = new Label();
        methodVisitor.visitLabel(label61);
        methodVisitor.visitLineNumber(794, label61);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitLdcInsn("Signer #");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ILOAD, 15);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitLdcInsn(" public key SHA-256 digest: ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label62 = new Label();
        methodVisitor.visitLabel(label62);
        methodVisitor.visitLineNumber(795, label62);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitLdcInsn("Signer #");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ILOAD, 15);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitLdcInsn(" public key SHA-1 digest: ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label63 = new Label();
        methodVisitor.visitLabel(label63);
        methodVisitor.visitLineNumber(796, label63);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitLdcInsn("Signer #");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ILOAD, 15);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitLdcInsn(" public key MD5 digest: ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label64 = new Label();
        methodVisitor.visitLabel(label64);
        methodVisitor.visitLineNumber(797, label64);
        methodVisitor.visitVarInsn(ALOAD, 14);
        methodVisitor.visitVarInsn(ASTORE, 14);
        Label label65 = new Label();
        methodVisitor.visitLabel(label65);
        methodVisitor.visitLineNumber(766, label65);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitVarInsn(ISTORE, 2);
        methodVisitor.visitJumpInsn(GOTO, label31);
        methodVisitor.visitLabel(label24);
        methodVisitor.visitLineNumber(800, label24);
        methodVisitor.visitFrame(Opcodes.F_NEW, 13, new Object[] {"[Ljava/lang/String;", "java/io/File", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER}, 0, new Object[] {});
        Label label66 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label66);
        methodVisitor.visitLabel(label21);
        methodVisitor.visitLineNumber(801, label21);
        methodVisitor.visitFrame(Opcodes.F_NEW, 13, new Object[] {"[Ljava/lang/String;", "java/io/File", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER}, 0, new Object[] {});
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "err", "Ljava/io/PrintStream;");
        methodVisitor.visitLdcInsn("DOES NOT VERIFY");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        methodVisitor.visitLabel(label66);
        methodVisitor.visitLineNumber(804, label66);
        methodVisitor.visitFrame(Opcodes.F_NEW, 13, new Object[] {"[Ljava/lang/String;", "java/io/File", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER}, 0, new Object[] {});
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 13);
        Label label67 = new Label();
        methodVisitor.visitLabel(label67);
        methodVisitor.visitLineNumber(805, label67);
        methodVisitor.visitVarInsn(ILOAD, 12);
        methodVisitor.visitJumpInsn(IFNE, label1);
        Label label68 = new Label();
        methodVisitor.visitLabel(label68);
        methodVisitor.visitLineNumber(806, label68);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "exit", "(I)V", false);
        methodVisitor.visitLabel(label1);
        methodVisitor.visitLineNumber(814, label1);
        methodVisitor.visitFrame(Opcodes.F_NEW, 12, new Object[] {"[Ljava/lang/String;", "java/io/File", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String"}, 0, new Object[] {});
        Label label69 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label69);
        methodVisitor.visitLabel(label2);
        methodVisitor.visitLineNumber(808, label2);
        methodVisitor.visitFrame(Opcodes.F_NEW, 12, new Object[] {"[Ljava/lang/String;", "java/io/File", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String"}, 1, new Object[] {"java/lang/Exception"});
        methodVisitor.visitVarInsn(ASTORE, 12);
        Label label70 = new Label();
        methodVisitor.visitLabel(label70);
        methodVisitor.visitLineNumber(809, label70);
        methodVisitor.visitVarInsn(ALOAD, 12);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Exception", "getMessage", "()Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE, 13);
        Label label71 = new Label();
        methodVisitor.visitLabel(label71);
        methodVisitor.visitLineNumber(810, label71);
        methodVisitor.visitVarInsn(ALOAD, 13);
        methodVisitor.visitLdcInsn(".");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "endsWith", "(Ljava/lang/String;)Z", false);
        methodVisitor.visitJumpInsn(IFNE, label69);
        Label label72 = new Label();
        methodVisitor.visitLabel(label72);
        methodVisitor.visitLineNumber(811, label72);
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitVarInsn(ALOAD, 13);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitIntInsn(BIPUSH, 46);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(C)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE, 14);
        methodVisitor.visitLabel(label69);
        methodVisitor.visitLineNumber(815, label69);
        methodVisitor.visitFrame(Opcodes.F_NEW, 12, new Object[] {"[Ljava/lang/String;", "java/io/File", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String"}, 0, new Object[] {});
        methodVisitor.visitInsn(RETURN);
        Label label73 = new Label();
        methodVisitor.visitLabel(label73);
        methodVisitor.visitLocalVariable("i", "I", null, label44, label42, 19);
        methodVisitor.visitLocalVariable("i", "I", null, label48, label46, 19);
        methodVisitor.visitLocalVariable("params", "Ljava/security/interfaces/DSAParams;", null, label50, label49, 20);
        methodVisitor.visitLocalVariable("next", "Ljava/security/cert/X509Certificate;", null, label33, label65, 16);
        methodVisitor.visitLocalVariable("encoded", "[B", null, label36, label65, 17);
        methodVisitor.visitLocalVariable("publicKey", "Ljava/security/PublicKey;", null, label40, label65, 18);
        methodVisitor.visitLocalVariable("i", "I", null, label45, label65, 19);
        methodVisitor.visitLocalVariable("printStream", "Ljava/io/PrintStream;", null, label52, label65, 20);
        methodVisitor.visitLocalVariable("sb", "Ljava/lang/StringBuilder;", null, label53, label65, 21);
        methodVisitor.visitLocalVariable("encoded2", "[B", null, label61, label65, 22);
        methodVisitor.visitLocalVariable("i5", "I", null, label31, label24, 15);
        methodVisitor.visitLocalVariable("it2", "Ljava/util/Iterator;", "Ljava/util/Iterator<Ljava/security/cert/X509Certificate;>;", label30, label24, 14);
        methodVisitor.visitLocalVariable("m10668", "Ljava/util/List;", "Ljava/util/List<Ljava/security/cert/X509Certificate;>;", label23, label24, 13);
        methodVisitor.visitLocalVariable("m10673", "Z", null, label20, label1, 12);
        methodVisitor.visitLocalVariable("z6", "Z", null, label67, label1, 13);
        methodVisitor.visitLocalVariable("message", "Ljava/lang/String;", null, label71, label69, 13);
        methodVisitor.visitLocalVariable("var26", "Ljava/lang/Exception;", null, label70, label69, 12);
        methodVisitor.visitLocalVariable("var10000", "[Ljava/lang/String;", null, label4, label73, 0);
        methodVisitor.visitLocalVariable("file", "Ljava/io/File;", null, label5, label73, 1);
        methodVisitor.visitLocalVariable("i2", "I", null, label6, label73, 2);
        methodVisitor.visitLocalVariable("str", "Ljava/lang/String;", null, label7, label73, 3);
        methodVisitor.visitLocalVariable("z", "Z", null, label8, label73, 4);
        methodVisitor.visitLocalVariable("z2", "Z", null, label9, label73, 5);
        methodVisitor.visitLocalVariable("i3", "I", null, label10, label73, 6);
        methodVisitor.visitLocalVariable("i4", "I", null, label11, label73, 7);
        methodVisitor.visitLocalVariable("z3", "Z", null, label12, label73, 8);
        methodVisitor.visitLocalVariable("z4", "Z", null, label13, label73, 9);
        methodVisitor.visitLocalVariable("z5", "Z", null, label14, label73, 10);
        methodVisitor.visitLocalVariable("m11128", "Ljava/lang/String;", null, label15, label73, 11);
        methodVisitor.visitMaxs(4, 23);
        methodVisitor.visitEnd();
    }
}
