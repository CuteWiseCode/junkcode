package com.me.plugin.templates.add;

import static org.objectweb.asm.Opcodes.*;
import  org.objectweb.asm.Opcodes;

import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;

public class Template17 {

    public static void  fillfromCode(MethodVisitor methodVisitor){
        methodVisitor.visitCode();
        Label label0 = new Label();
        Label label1 = new Label();
        Label label2 = new Label();
        methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/io/FileNotFoundException");
        Label label3 = new Label();
        Label label4 = new Label();
        Label label5 = new Label();
        methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/io/IOException");
        Label label6 = new Label();
        methodVisitor.visitLabel(label6);
        methodVisitor.visitLineNumber(1032, label6);
        methodVisitor.visitInsn(ACONST_NULL);
        methodVisitor.visitVarInsn(ASTORE, 1);
        methodVisitor.visitLabel(label0);
        methodVisitor.visitLineNumber(1034, label0);
        methodVisitor.visitTypeInsn(NEW, "java/io/BufferedReader");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitTypeInsn(NEW, "java/io/FileReader");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitLdcInsn("temp");
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/FileReader", "<init>", "(Ljava/lang/String;)V", false);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/BufferedReader", "<init>", "(Ljava/io/Reader;)V", false);
        methodVisitor.visitVarInsn(ASTORE, 1);
        methodVisitor.visitLabel(label1);
        methodVisitor.visitLineNumber(1037, label1);
        Label label7 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label7);
        methodVisitor.visitLabel(label2);
        methodVisitor.visitLineNumber(1035, label2);
        methodVisitor.visitVarInsn(ASTORE, 2);
        Label label8 = new Label();
        methodVisitor.visitLabel(label8);
        methodVisitor.visitLineNumber(1036, label8);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/FileNotFoundException", "printStackTrace", "()V", false);
        methodVisitor.visitLabel(label7);
        methodVisitor.visitLineNumber(1038, label7);
        methodVisitor.visitTypeInsn(NEW, "java/util/ArrayList");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", false);
        methodVisitor.visitVarInsn(ASTORE, 2);
        Label label9 = new Label();
        methodVisitor.visitLabel(label9);
        methodVisitor.visitLineNumber(1040, label9);
        methodVisitor.visitInsn(ACONST_NULL);
        methodVisitor.visitVarInsn(ASTORE, 3);
        methodVisitor.visitLabel(label3);
        methodVisitor.visitLineNumber(1042, label3);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/BufferedReader", "readLine", "()Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE, 3);
        methodVisitor.visitLabel(label4);
        methodVisitor.visitLineNumber(1045, label4);
        Label label10 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label10);
        methodVisitor.visitLabel(label5);
        methodVisitor.visitLineNumber(1043, label5);
        methodVisitor.visitVarInsn(ASTORE, 4);
        Label label11 = new Label();
        methodVisitor.visitLabel(label11);
        methodVisitor.visitLineNumber(1044, label11);
        methodVisitor.visitVarInsn(ALOAD, 4);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/IOException", "printStackTrace", "()V", false);
        methodVisitor.visitLabel(label10);
        methodVisitor.visitLineNumber(1046, label10);
        methodVisitor.visitInsn(ACONST_NULL);
        methodVisitor.visitVarInsn(ASTORE, 4);
        Label label12 = new Label();
        methodVisitor.visitLabel(label12);
        methodVisitor.visitLineNumber(1047, label12);
        methodVisitor.visitVarInsn(ALOAD, 3);
        Label label13 = new Label();
        methodVisitor.visitJumpInsn(IFNONNULL, label13);
        Label label14 = new Label();
        methodVisitor.visitLabel(label14);
        methodVisitor.visitLineNumber(1048, label14);
        methodVisitor.visitInsn(RETURN);
        methodVisitor.visitLabel(label13);
        methodVisitor.visitLineNumber(1050, label13);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitIntInsn(BIPUSH, 35);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(I)I", false);
        methodVisitor.visitVarInsn(ISTORE, 5);
        Label label15 = new Label();
        methodVisitor.visitLabel(label15);
        methodVisitor.visitLineNumber(1051, label15);
        methodVisitor.visitVarInsn(ILOAD, 5);
        Label label16 = new Label();
        methodVisitor.visitJumpInsn(IFLT, label16);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ILOAD, 5);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE, 3);
        methodVisitor.visitLabel(label16);
        methodVisitor.visitLineNumber(1052, label16);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "trim", "()Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE, 3);
        Label label17 = new Label();
        methodVisitor.visitLabel(label17);
        methodVisitor.visitLineNumber(1053, label17);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
        methodVisitor.visitVarInsn(ISTORE, 6);
        Label label18 = new Label();
        methodVisitor.visitLabel(label18);
        methodVisitor.visitLineNumber(1054, label18);
        methodVisitor.visitVarInsn(ILOAD, 6);
        Label label19 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label19);
        Label label20 = new Label();
        methodVisitor.visitLabel(label20);
        methodVisitor.visitLineNumber(1055, label20);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitIntInsn(BIPUSH, 32);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(I)I", false);
        Label label21 = new Label();
        methodVisitor.visitJumpInsn(IFGE, label21);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitIntInsn(BIPUSH, 9);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(I)I", false);
        Label label22 = new Label();
        methodVisitor.visitJumpInsn(IFLT, label22);
        methodVisitor.visitLabel(label21);
        methodVisitor.visitLineNumber(1056, label21);
        methodVisitor.visitLdcInsn("Illegal configuration-file syntax");
        methodVisitor.visitVarInsn(ASTORE, 4);
        methodVisitor.visitLabel(label22);
        methodVisitor.visitLineNumber(1057, label22);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "codePointAt", "(I)I", false);
        methodVisitor.visitVarInsn(ISTORE, 7);
        Label label23 = new Label();
        methodVisitor.visitLabel(label23);
        methodVisitor.visitLineNumber(1058, label23);
        methodVisitor.visitVarInsn(ILOAD, 7);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Character", "isJavaIdentifierStart", "(I)Z", false);
        Label label24 = new Label();
        methodVisitor.visitJumpInsn(IFNE, label24);
        Label label25 = new Label();
        methodVisitor.visitLabel(label25);
        methodVisitor.visitLineNumber(1059, label25);
        methodVisitor.visitLdcInsn("Illegal provider-class name: ");
        methodVisitor.visitVarInsn(ASTORE, 4);
        methodVisitor.visitLabel(label24);
        methodVisitor.visitLineNumber(1060, label24);
        methodVisitor.visitVarInsn(ILOAD, 7);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Character", "charCount", "(I)I", false);
        methodVisitor.visitVarInsn(ISTORE, 8);
        Label label26 = new Label();
        methodVisitor.visitLabel(label26);
        methodVisitor.visitVarInsn(ILOAD, 8);
        methodVisitor.visitVarInsn(ILOAD, 6);
        Label label27 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPGE, label27);
        Label label28 = new Label();
        methodVisitor.visitLabel(label28);
        methodVisitor.visitLineNumber(1061, label28);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitVarInsn(ILOAD, 8);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "codePointAt", "(I)I", false);
        methodVisitor.visitVarInsn(ISTORE, 7);
        Label label29 = new Label();
        methodVisitor.visitLabel(label29);
        methodVisitor.visitLineNumber(1062, label29);
        methodVisitor.visitVarInsn(ILOAD, 7);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Character", "isJavaIdentifierPart", "(I)Z", false);
        Label label30 = new Label();
        methodVisitor.visitJumpInsn(IFNE, label30);
        methodVisitor.visitVarInsn(ILOAD, 7);
        methodVisitor.visitIntInsn(BIPUSH, 46);
        methodVisitor.visitJumpInsn(IF_ICMPEQ, label30);
        Label label31 = new Label();
        methodVisitor.visitLabel(label31);
        methodVisitor.visitLineNumber(1063, label31);
        methodVisitor.visitLdcInsn("Illegal provider-class name: ");
        methodVisitor.visitVarInsn(ASTORE, 4);
        methodVisitor.visitLabel(label30);
        methodVisitor.visitLineNumber(1060, label30);
        methodVisitor.visitVarInsn(ILOAD, 8);
        methodVisitor.visitVarInsn(ILOAD, 7);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Character", "charCount", "(I)I", false);
        methodVisitor.visitInsn(IADD);
        methodVisitor.visitVarInsn(ISTORE, 8);
        methodVisitor.visitJumpInsn(GOTO, label26);
        methodVisitor.visitLabel(label27);
        methodVisitor.visitLineNumber(1066, label27);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
        methodVisitor.visitInsn(POP);
        Label label32 = new Label();
        methodVisitor.visitLabel(label32);
        methodVisitor.visitLineNumber(1067, label32);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitVarInsn(ALOAD, 4);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        methodVisitor.visitLabel(label19);
        methodVisitor.visitLineNumber(1070, label19);
        methodVisitor.visitInsn(RETURN);
        Label label33 = new Label();
        methodVisitor.visitLabel(label33);
        methodVisitor.visitLocalVariable("e", "Ljava/io/FileNotFoundException;", null, label8, label7, 2);
        methodVisitor.visitLocalVariable("e", "Ljava/io/IOException;", null, label11, label10, 4);
        methodVisitor.visitLocalVariable("i", "I", null, label26, label27, 8);
        methodVisitor.visitLocalVariable("cp", "I", null, label23, label19, 7);
        methodVisitor.visitLocalVariable("r", "Ljava/io/BufferedReader;", null, label0, label33, 1);
        methodVisitor.visitLocalVariable("names", "Ljava/util/List;", "Ljava/util/List<Ljava/lang/String;>;", label9, label33, 2);
        methodVisitor.visitLocalVariable("ln", "Ljava/lang/String;", null, label3, label33, 3);
        methodVisitor.visitLocalVariable("a", "Ljava/lang/String;", null, label12, label33, 4);
        methodVisitor.visitLocalVariable("ci", "I", null, label15, label33, 5);
        methodVisitor.visitLocalVariable("n", "I", null, label18, label33, 6);
        methodVisitor.visitMaxs(5, 9);
        methodVisitor.visitEnd();
    }
}
