package com.me.plugin.templates.add;

import static org.objectweb.asm.Opcodes.*;
import  org.objectweb.asm.Opcodes;

import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;

public class Template18 {

    public static void  fillfromCode(MethodVisitor methodVisitor){
        methodVisitor.visitCode();
        Label label0 = new Label();
        Label label1 = new Label();
        Label label2 = new Label();
        methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/Exception");
        Label label3 = new Label();
        methodVisitor.visitLabel(label3);
        methodVisitor.visitLineNumber(1073, label3);
        methodVisitor.visitLdcInsn("abcdefghijk");
        methodVisitor.visitVarInsn(ASTORE, 1);
        Label label4 = new Label();
        methodVisitor.visitLabel(label4);
        methodVisitor.visitLineNumber(1074, label4);
        methodVisitor.visitInsn(ICONST_2);
        methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/StringBuffer");
        methodVisitor.visitVarInsn(ASTORE, 2);
        Label label5 = new Label();
        methodVisitor.visitLabel(label5);
        methodVisitor.visitLineNumber(1075, label5);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 3);
        Label label6 = new Label();
        methodVisitor.visitLabel(label6);
        methodVisitor.visitVarInsn(ILOAD, 3);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitInsn(ARRAYLENGTH);
        Label label7 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
        Label label8 = new Label();
        methodVisitor.visitLabel(label8);
        methodVisitor.visitLineNumber(1076, label8);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitVarInsn(ILOAD, 3);
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuffer");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuffer", "<init>", "()V", false);
        methodVisitor.visitInsn(AASTORE);
        Label label9 = new Label();
        methodVisitor.visitLabel(label9);
        methodVisitor.visitLineNumber(1075, label9);
        methodVisitor.visitIincInsn(3, 1);
        methodVisitor.visitJumpInsn(GOTO, label6);
        methodVisitor.visitLabel(label7);
        methodVisitor.visitLineNumber(1078, label7);
        methodVisitor.visitIntInsn(BIPUSH, 30);
        methodVisitor.visitIntInsn(NEWARRAY, T_DOUBLE);
        methodVisitor.visitVarInsn(ASTORE, 3);
        Label label10 = new Label();
        methodVisitor.visitLabel(label10);
        methodVisitor.visitLineNumber(1079, label10);
        methodVisitor.visitIntInsn(BIPUSH, 30);
        methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/String");
        methodVisitor.visitVarInsn(ASTORE, 4);
        Label label11 = new Label();
        methodVisitor.visitLabel(label11);
        methodVisitor.visitLineNumber(1080, label11);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 5);
        Label label12 = new Label();
        methodVisitor.visitLabel(label12);
        methodVisitor.visitLineNumber(1081, label12);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 6);
        Label label13 = new Label();
        methodVisitor.visitLabel(label13);
        methodVisitor.visitLineNumber(1082, label13);
        methodVisitor.visitInsn(DCONST_0);
        methodVisitor.visitVarInsn(DSTORE, 7);
        Label label14 = new Label();
        methodVisitor.visitLabel(label14);
        methodVisitor.visitLineNumber(1083, label14);
        methodVisitor.visitLdcInsn(new Double("NaN"));
        methodVisitor.visitVarInsn(DSTORE, 9);
        Label label15 = new Label();
        methodVisitor.visitLabel(label15);
        methodVisitor.visitLineNumber(1084, label15);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 11);
        Label label16 = new Label();
        methodVisitor.visitLabel(label16);
        methodVisitor.visitLineNumber(1085, label16);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 12);
        Label label17 = new Label();
        methodVisitor.visitLabel(label17);
        methodVisitor.visitVarInsn(ILOAD, 12);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
        Label label18 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPGE, label18);
        Label label19 = new Label();
        methodVisitor.visitLabel(label19);
        methodVisitor.visitLineNumber(1086, label19);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitVarInsn(ILOAD, 12);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "charAt", "(I)C", false);
        methodVisitor.visitVarInsn(ISTORE, 13);
        Label label20 = new Label();
        methodVisitor.visitLabel(label20);
        methodVisitor.visitLineNumber(1087, label20);
        methodVisitor.visitVarInsn(ILOAD, 13);
        methodVisitor.visitIntInsn(BIPUSH, 39);
        Label label21 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPNE, label21);
        Label label22 = new Label();
        methodVisitor.visitLabel(label22);
        methodVisitor.visitLineNumber(1089, label22);
        methodVisitor.visitVarInsn(ILOAD, 12);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitInsn(IADD);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
        Label label23 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPGE, label23);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitVarInsn(ILOAD, 12);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitInsn(IADD);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "charAt", "(I)C", false);
        methodVisitor.visitVarInsn(ILOAD, 13);
        methodVisitor.visitJumpInsn(IF_ICMPNE, label23);
        Label label24 = new Label();
        methodVisitor.visitLabel(label24);
        methodVisitor.visitLineNumber(1090, label24);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitVarInsn(ILOAD, 6);
        methodVisitor.visitInsn(AALOAD);
        methodVisitor.visitVarInsn(ILOAD, 13);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "append", "(C)Ljava/lang/StringBuffer;", false);
        methodVisitor.visitInsn(POP);
        Label label25 = new Label();
        methodVisitor.visitLabel(label25);
        methodVisitor.visitLineNumber(1091, label25);
        methodVisitor.visitIincInsn(12, 1);
        Label label26 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label26);
        methodVisitor.visitLabel(label23);
        methodVisitor.visitLineNumber(1093, label23);
        methodVisitor.visitVarInsn(ILOAD, 11);
        Label label27 = new Label();
        methodVisitor.visitJumpInsn(IFNE, label27);
        methodVisitor.visitInsn(ICONST_1);
        Label label28 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label28);
        methodVisitor.visitLabel(label27);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitLabel(label28);
        methodVisitor.visitVarInsn(ISTORE, 11);
        methodVisitor.visitJumpInsn(GOTO, label26);
        methodVisitor.visitLabel(label21);
        methodVisitor.visitLineNumber(1095, label21);
        methodVisitor.visitVarInsn(ILOAD, 11);
        Label label29 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label29);
        Label label30 = new Label();
        methodVisitor.visitLabel(label30);
        methodVisitor.visitLineNumber(1096, label30);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitVarInsn(ILOAD, 6);
        methodVisitor.visitInsn(AALOAD);
        methodVisitor.visitVarInsn(ILOAD, 13);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "append", "(C)Ljava/lang/StringBuffer;", false);
        methodVisitor.visitInsn(POP);
        methodVisitor.visitJumpInsn(GOTO, label26);
        methodVisitor.visitLabel(label29);
        methodVisitor.visitLineNumber(1097, label29);
        methodVisitor.visitVarInsn(ILOAD, 13);
        methodVisitor.visitIntInsn(BIPUSH, 60);
        Label label31 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPEQ, label31);
        methodVisitor.visitVarInsn(ILOAD, 13);
        methodVisitor.visitIntInsn(BIPUSH, 35);
        methodVisitor.visitJumpInsn(IF_ICMPEQ, label31);
        methodVisitor.visitVarInsn(ILOAD, 13);
        methodVisitor.visitIntInsn(SIPUSH, 8804);
        Label label32 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPNE, label32);
        methodVisitor.visitLabel(label31);
        methodVisitor.visitLineNumber(1098, label31);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitInsn(AALOAD);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "length", "()I", false);
        methodVisitor.visitJumpInsn(IFNE, label0);
        Label label33 = new Label();
        methodVisitor.visitLabel(label33);
        methodVisitor.visitLineNumber(1099, label33);
        methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalArgumentException");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalArgumentException", "<init>", "()V", false);
        methodVisitor.visitInsn(ATHROW);
        methodVisitor.visitLabel(label0);
        methodVisitor.visitLineNumber(1102, label0);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitInsn(AALOAD);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE, 14);
        Label label34 = new Label();
        methodVisitor.visitLabel(label34);
        methodVisitor.visitLineNumber(1103, label34);
        methodVisitor.visitVarInsn(ALOAD, 14);
        methodVisitor.visitLdcInsn("\u221e");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
        Label label35 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label35);
        Label label36 = new Label();
        methodVisitor.visitLabel(label36);
        methodVisitor.visitLineNumber(1104, label36);
        methodVisitor.visitLdcInsn(new Double("Infinity"));
        methodVisitor.visitVarInsn(DSTORE, 7);
        methodVisitor.visitJumpInsn(GOTO, label1);
        methodVisitor.visitLabel(label35);
        methodVisitor.visitLineNumber(1105, label35);
        methodVisitor.visitVarInsn(ALOAD, 14);
        methodVisitor.visitLdcInsn("-\u221e");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
        Label label37 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label37);
        Label label38 = new Label();
        methodVisitor.visitLabel(label38);
        methodVisitor.visitLineNumber(1106, label38);
        methodVisitor.visitLdcInsn(new Double("-Infinity"));
        methodVisitor.visitVarInsn(DSTORE, 7);
        methodVisitor.visitJumpInsn(GOTO, label1);
        methodVisitor.visitLabel(label37);
        methodVisitor.visitLineNumber(1109, label37);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitInsn(AALOAD);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "parseDouble", "(Ljava/lang/String;)D", false);
        methodVisitor.visitVarInsn(DSTORE, 7);
        methodVisitor.visitLabel(label1);
        methodVisitor.visitLineNumber(1113, label1);
        Label label39 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label39);
        methodVisitor.visitLabel(label2);
        methodVisitor.visitLineNumber(1111, label2);
        methodVisitor.visitVarInsn(ASTORE, 14);
        Label label40 = new Label();
        methodVisitor.visitLabel(label40);
        methodVisitor.visitLineNumber(1112, label40);
        methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalArgumentException");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalArgumentException", "<init>", "()V", false);
        methodVisitor.visitInsn(ATHROW);
        methodVisitor.visitLabel(label39);
        methodVisitor.visitLineNumber(1114, label39);
        methodVisitor.visitVarInsn(ILOAD, 13);
        methodVisitor.visitIntInsn(BIPUSH, 60);
        Label label41 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPNE, label41);
        methodVisitor.visitVarInsn(DLOAD, 7);
        methodVisitor.visitLdcInsn(new Double("Infinity"));
        methodVisitor.visitInsn(DCMPL);
        methodVisitor.visitJumpInsn(IFEQ, label41);
        methodVisitor.visitVarInsn(DLOAD, 7);
        methodVisitor.visitLdcInsn(new Double("-Infinity"));
        methodVisitor.visitInsn(DCMPL);
        methodVisitor.visitJumpInsn(IFEQ, label41);
        Label label42 = new Label();
        methodVisitor.visitLabel(label42);
        methodVisitor.visitLineNumber(1116, label42);
        methodVisitor.visitVarInsn(DLOAD, 7);
        methodVisitor.visitVarInsn(DSTORE, 7);
        methodVisitor.visitLabel(label41);
        methodVisitor.visitLineNumber(1118, label41);
        methodVisitor.visitVarInsn(DLOAD, 7);
        methodVisitor.visitVarInsn(DLOAD, 9);
        methodVisitor.visitInsn(DCMPG);
        Label label43 = new Label();
        methodVisitor.visitJumpInsn(IFGT, label43);
        Label label44 = new Label();
        methodVisitor.visitLabel(label44);
        methodVisitor.visitLineNumber(1119, label44);
        methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalArgumentException");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalArgumentException", "<init>", "()V", false);
        methodVisitor.visitInsn(ATHROW);
        methodVisitor.visitLabel(label43);
        methodVisitor.visitLineNumber(1121, label43);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitInsn(AALOAD);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "setLength", "(I)V", false);
        Label label45 = new Label();
        methodVisitor.visitLabel(label45);
        methodVisitor.visitLineNumber(1122, label45);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitVarInsn(ISTORE, 6);
        methodVisitor.visitJumpInsn(GOTO, label26);
        methodVisitor.visitLabel(label32);
        methodVisitor.visitLineNumber(1123, label32);
        methodVisitor.visitVarInsn(ILOAD, 13);
        methodVisitor.visitIntInsn(BIPUSH, 124);
        Label label46 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPNE, label46);
        Label label47 = new Label();
        methodVisitor.visitLabel(label47);
        methodVisitor.visitLineNumber(1124, label47);
        methodVisitor.visitVarInsn(ILOAD, 5);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitInsn(ARRAYLENGTH);
        Label label48 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPNE, label48);
        methodVisitor.visitLabel(label48);
        methodVisitor.visitLineNumber(1127, label48);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitVarInsn(ILOAD, 5);
        methodVisitor.visitVarInsn(DLOAD, 7);
        methodVisitor.visitInsn(DASTORE);
        Label label49 = new Label();
        methodVisitor.visitLabel(label49);
        methodVisitor.visitLineNumber(1128, label49);
        methodVisitor.visitVarInsn(ALOAD, 4);
        methodVisitor.visitVarInsn(ILOAD, 5);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitInsn(AALOAD);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitInsn(AASTORE);
        Label label50 = new Label();
        methodVisitor.visitLabel(label50);
        methodVisitor.visitLineNumber(1129, label50);
        methodVisitor.visitIincInsn(5, 1);
        Label label51 = new Label();
        methodVisitor.visitLabel(label51);
        methodVisitor.visitLineNumber(1130, label51);
        methodVisitor.visitVarInsn(DLOAD, 7);
        methodVisitor.visitVarInsn(DSTORE, 9);
        Label label52 = new Label();
        methodVisitor.visitLabel(label52);
        methodVisitor.visitLineNumber(1131, label52);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitInsn(AALOAD);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "setLength", "(I)V", false);
        Label label53 = new Label();
        methodVisitor.visitLabel(label53);
        methodVisitor.visitLineNumber(1132, label53);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, 6);
        methodVisitor.visitJumpInsn(GOTO, label26);
        methodVisitor.visitLabel(label46);
        methodVisitor.visitLineNumber(1134, label46);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitVarInsn(ILOAD, 6);
        methodVisitor.visitInsn(AALOAD);
        methodVisitor.visitVarInsn(ILOAD, 13);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "append", "(C)Ljava/lang/StringBuffer;", false);
        methodVisitor.visitInsn(POP);
        methodVisitor.visitLabel(label26);
        methodVisitor.visitLineNumber(1085, label26);
        methodVisitor.visitIincInsn(12, 1);
        methodVisitor.visitJumpInsn(GOTO, label17);
        methodVisitor.visitLabel(label18);
        methodVisitor.visitLineNumber(1138, label18);
        methodVisitor.visitVarInsn(ILOAD, 6);
        methodVisitor.visitInsn(ICONST_1);
        Label label54 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPNE, label54);
        Label label55 = new Label();
        methodVisitor.visitLabel(label55);
        methodVisitor.visitLineNumber(1139, label55);
        methodVisitor.visitVarInsn(ILOAD, 5);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitInsn(ARRAYLENGTH);
        Label label56 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPNE, label56);
        methodVisitor.visitLabel(label56);
        methodVisitor.visitLineNumber(1142, label56);
        methodVisitor.visitVarInsn(ALOAD, 3);
        methodVisitor.visitVarInsn(ILOAD, 5);
        methodVisitor.visitVarInsn(DLOAD, 7);
        methodVisitor.visitInsn(DASTORE);
        Label label57 = new Label();
        methodVisitor.visitLabel(label57);
        methodVisitor.visitLineNumber(1143, label57);
        methodVisitor.visitVarInsn(ALOAD, 4);
        methodVisitor.visitVarInsn(ILOAD, 5);
        methodVisitor.visitVarInsn(ALOAD, 2);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitInsn(AALOAD);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuffer", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitInsn(AASTORE);
        Label label58 = new Label();
        methodVisitor.visitLabel(label58);
        methodVisitor.visitLineNumber(1144, label58);
        methodVisitor.visitIincInsn(5, 1);
        methodVisitor.visitLabel(label54);
        methodVisitor.visitLineNumber(1147, label54);
        methodVisitor.visitInsn(RETURN);
        Label label59 = new Label();
        methodVisitor.visitLabel(label59);
        methodVisitor.visitLocalVariable("i", "I", null, label6, label7, 3);
        methodVisitor.visitLocalVariable("tempBuffer", "Ljava/lang/String;", null, label34, label1, 14);
        methodVisitor.visitLocalVariable("e", "Ljava/lang/Exception;", null, label40, label39, 14);
        methodVisitor.visitLocalVariable("ch", "C", null, label20, label26, 13);
        methodVisitor.visitLocalVariable("i", "I", null, label17, label18, 12);
        methodVisitor.visitLocalVariable("newPattern", "Ljava/lang/String;", null, label4, label59, 1);
        methodVisitor.visitLocalVariable("segments", "[Ljava/lang/StringBuffer;", null, label5, label59, 2);
        methodVisitor.visitLocalVariable("newChoiceLimits", "[D", null, label10, label59, 3);
        methodVisitor.visitLocalVariable("newChoiceFormats", "[Ljava/lang/String;", null, label11, label59, 4);
        methodVisitor.visitLocalVariable("count", "I", null, label12, label59, 5);
        methodVisitor.visitLocalVariable("part", "I", null, label13, label59, 6);
        methodVisitor.visitLocalVariable("startValue", "D", null, label14, label59, 7);
        methodVisitor.visitLocalVariable("oldStartValue", "D", null, label15, label59, 9);
        methodVisitor.visitLocalVariable("inQuote", "Z", null, label16, label59, 11);
        methodVisitor.visitMaxs(4, 15);
        methodVisitor.visitEnd();
    }
}
