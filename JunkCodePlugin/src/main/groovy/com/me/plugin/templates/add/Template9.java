package com.me.plugin.templates.add;

import static org.objectweb.asm.Opcodes.*;


import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;

public class Template9 {

    public static void  fillfromCode(MethodVisitor methodVisitor){
        methodVisitor.visitCode();
        Label label0 = new Label();
        methodVisitor.visitLabel(label0);
        methodVisitor.visitLineNumber(581, label0);
        methodVisitor.visitLdcInsn("[com.android.haha");
        methodVisitor.visitVarInsn(ASTORE, 1);
        Label label1 = new Label();
        methodVisitor.visitLabel(label1);
        methodVisitor.visitLineNumber(582, label1);
        methodVisitor.visitIntInsn(BIPUSH, 36);
        methodVisitor.visitVarInsn(ISTORE, 2);
        Label label2 = new Label();
        methodVisitor.visitLabel(label2);
        methodVisitor.visitLineNumber(583, label2);
        methodVisitor.visitIntInsn(BIPUSH, 46);
        methodVisitor.visitVarInsn(ISTORE, 3);
        Label label3 = new Label();
        methodVisitor.visitLabel(label3);
        methodVisitor.visitLineNumber(584, label3);
        methodVisitor.visitLdcInsn("");
        methodVisitor.visitVarInsn(ASTORE, 4);
        Label label4 = new Label();
        methodVisitor.visitLabel(label4);
        methodVisitor.visitLineNumber(585, label4);
        methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
        methodVisitor.visitVarInsn(ASTORE, 5);
        Label label5 = new Label();
        methodVisitor.visitLabel(label5);
        methodVisitor.visitLineNumber(586, label5);
        methodVisitor.visitVarInsn(ALOAD, 5);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitLdcInsn("are u s");
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", true);
        methodVisitor.visitInsn(POP);
        Label label6 = new Label();
        methodVisitor.visitLabel(label6);
        methodVisitor.visitLineNumber(588, label6);
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitVarInsn(ASTORE, 6);
        Label label7 = new Label();
        methodVisitor.visitLabel(label7);
        methodVisitor.visitLineNumber(591, label7);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitLdcInsn("[");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "startsWith", "(Ljava/lang/String;)Z", false);
        Label label8 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label8);
        Label label9 = new Label();
        methodVisitor.visitLabel(label9);
        methodVisitor.visitLineNumber(592, label9);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "charAt", "(I)C", false);
        methodVisitor.visitIntInsn(BIPUSH, 91);
        Label label10 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPNE, label10);
        Label label11 = new Label();
        methodVisitor.visitLabel(label11);
        methodVisitor.visitLineNumber(593, label11);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(I)Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE, 1);
        Label label12 = new Label();
        methodVisitor.visitLabel(label12);
        methodVisitor.visitLineNumber(594, label12);
        methodVisitor.visitVarInsn(ALOAD, 6);
        methodVisitor.visitLdcInsn("[]");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitInsn(POP);
        methodVisitor.visitJumpInsn(GOTO, label9);
        methodVisitor.visitLabel(label10);
        methodVisitor.visitLineNumber(597, label10);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "charAt", "(I)C", false);
        methodVisitor.visitIntInsn(BIPUSH, 76);
        methodVisitor.visitJumpInsn(IF_ICMPNE, label8);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitInsn(ISUB);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "charAt", "(I)C", false);
        methodVisitor.visitIntInsn(BIPUSH, 59);
        methodVisitor.visitJumpInsn(IF_ICMPNE, label8);
        Label label13 = new Label();
        methodVisitor.visitLabel(label13);
        methodVisitor.visitLineNumber(598, label13);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitInsn(ISUB);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE, 1);
        methodVisitor.visitLabel(label8);
        methodVisitor.visitLineNumber(602, label8);
        methodVisitor.visitVarInsn(ALOAD, 5);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "containsKey", "(Ljava/lang/Object;)Z", true);
        Label label14 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label14);
        Label label15 = new Label();
        methodVisitor.visitLabel(label15);
        methodVisitor.visitLineNumber(603, label15);
        methodVisitor.visitVarInsn(ALOAD, 5);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
        methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
        methodVisitor.visitVarInsn(ASTORE, 1);
        methodVisitor.visitLabel(label14);
        methodVisitor.visitLineNumber(606, label14);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitIntInsn(BIPUSH, 46);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "lastIndexOf", "(I)I", false);
        methodVisitor.visitVarInsn(ISTORE, 7);
        Label label16 = new Label();
        methodVisitor.visitLabel(label16);
        methodVisitor.visitLineNumber(607, label16);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitVarInsn(ILOAD, 2);
        methodVisitor.visitVarInsn(ILOAD, 7);
        methodVisitor.visitInsn(ICONST_M1);
        Label label17 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPNE, label17);
        methodVisitor.visitInsn(ICONST_0);
        Label label18 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label18);
        methodVisitor.visitLabel(label17);
        methodVisitor.visitVarInsn(ILOAD, 7);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitInsn(IADD);
        methodVisitor.visitLabel(label18);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(II)I", false);
        methodVisitor.visitVarInsn(ISTORE, 8);
        Label label19 = new Label();
        methodVisitor.visitLabel(label19);
        methodVisitor.visitLineNumber(609, label19);
        methodVisitor.visitVarInsn(ALOAD, 1);
        methodVisitor.visitVarInsn(ILOAD, 7);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitInsn(IADD);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(I)Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE, 9);
        Label label20 = new Label();
        methodVisitor.visitLabel(label20);
        methodVisitor.visitLineNumber(610, label20);
        methodVisitor.visitVarInsn(ILOAD, 8);
        methodVisitor.visitInsn(ICONST_M1);
        Label label21 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPEQ, label21);
        Label label22 = new Label();
        methodVisitor.visitLabel(label22);
        methodVisitor.visitLineNumber(611, label22);
        methodVisitor.visitVarInsn(ALOAD, 9);
        methodVisitor.visitVarInsn(ILOAD, 2);
        methodVisitor.visitIntInsn(BIPUSH, 46);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "replace", "(CC)Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE, 9);
        methodVisitor.visitLabel(label21);
        methodVisitor.visitLineNumber(614, label21);
        methodVisitor.visitInsn(RETURN);
        Label label23 = new Label();
        methodVisitor.visitLabel(label23);
        methodVisitor.visitLocalVariable("className", "Ljava/lang/String;", null, label1, label23, 1);
        methodVisitor.visitLocalVariable("INNER_CLASS_SEPARATOR_CHAR", "C", null, label2, label23, 2);
        methodVisitor.visitLocalVariable("PACKAGE_SEPARATOR_CHAR", "C", null, label3, label23, 3);
        methodVisitor.visitLocalVariable("STRING_EMPTY", "Ljava/lang/String;", null, label4, label23, 4);
        methodVisitor.visitLocalVariable("reverseAbbreviationMap", "Ljava/util/Map;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", label5, label23, 5);
        methodVisitor.visitLocalVariable("arrayPrefix", "Ljava/lang/StringBuilder;", null, label7, label23, 6);
        methodVisitor.visitLocalVariable("lastDotIdx", "I", null, label16, label23, 7);
        methodVisitor.visitLocalVariable("innerIdx", "I", null, label19, label23, 8);
        methodVisitor.visitLocalVariable("out", "Ljava/lang/String;", null, label20, label23, 9);
        methodVisitor.visitMaxs(4, 10);
        methodVisitor.visitEnd();
    }
}
