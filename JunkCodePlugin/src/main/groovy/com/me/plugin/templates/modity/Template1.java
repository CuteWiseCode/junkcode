package com.me.plugin.templates.modity;

import static org.objectweb.asm.Opcodes.*;


import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.Type;

public class Template1 {

    public static void  modifyFromCode(MethodVisitor methodVisitor,int index){
     Label label0 = new Label();
//     Label label1 = new Label();
//     Label label2 = new Label();
//     methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
//     Label label3 = new Label();
//     methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
     Label label4 = new Label();
     methodVisitor.visitLabel(label4);
     methodVisitor.visitLineNumber(102, label4);
     methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J", false);
     methodVisitor.visitLdcInsn(new Long(86400000L));
     methodVisitor.visitInsn(LAND);
     methodVisitor.visitInsn(LCONST_0);
     methodVisitor.visitInsn(LCMP);
     Label label5 = new Label();
     methodVisitor.visitJumpInsn(IFNE, label5);
     Label label6 = new Label();
     methodVisitor.visitLabel(label6);
     methodVisitor.visitLineNumber(104, label6);
     methodVisitor.visitLdcInsn(Type.getType("Ljava/awt/font/NumericShaper;"));
     methodVisitor.visitInsn(DUP);
     int v4 = ++index;
     methodVisitor.visitVarInsn(ASTORE, v4);
     methodVisitor.visitInsn(MONITORENTER);
     methodVisitor.visitLabel(label0);
     methodVisitor.visitLineNumber(105, label0);
     methodVisitor.visitTypeInsn(NEW, "java/util/Random");
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/Random", "<init>", "()V", false);
     methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextInt", "()I", false);

    int v5 =++ index;
     methodVisitor.visitVarInsn(ISTORE, v5);
     Label label7 = new Label();
     methodVisitor.visitLabel(label7);
     methodVisitor.visitLineNumber(106, label7);
     methodVisitor.visitIntInsn(BIPUSH, 18);
     methodVisitor.visitIntInsn(NEWARRAY, T_CHAR);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitInsn(ICONST_0);
     methodVisitor.visitIntInsn(SIPUSH, 1584);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitInsn(ICONST_1);
     methodVisitor.visitIntInsn(SIPUSH, 1728);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitInsn(ICONST_2);
     methodVisitor.visitIntInsn(SIPUSH, 2358);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitInsn(ICONST_3);
     methodVisitor.visitIntInsn(SIPUSH, 2486);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitInsn(ICONST_4);
     methodVisitor.visitIntInsn(SIPUSH, 2614);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitInsn(ICONST_5);
     methodVisitor.visitIntInsn(SIPUSH, 2742);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitIntInsn(BIPUSH, 6);
     methodVisitor.visitIntInsn(SIPUSH, 2870);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitIntInsn(BIPUSH, 7);
     methodVisitor.visitIntInsn(SIPUSH, 2998);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitIntInsn(BIPUSH, 8);
     methodVisitor.visitIntInsn(SIPUSH, 3126);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitIntInsn(BIPUSH, 9);
     methodVisitor.visitIntInsn(SIPUSH, 3254);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitIntInsn(BIPUSH, 10);
     methodVisitor.visitIntInsn(SIPUSH, 3382);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitIntInsn(BIPUSH, 11);
     methodVisitor.visitIntInsn(SIPUSH, 3616);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitIntInsn(BIPUSH, 12);
     methodVisitor.visitIntInsn(SIPUSH, 3744);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitIntInsn(BIPUSH, 13);
     methodVisitor.visitIntInsn(SIPUSH, 3824);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitIntInsn(BIPUSH, 14);
     methodVisitor.visitIntInsn(SIPUSH, 4112);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitIntInsn(BIPUSH, 15);
     methodVisitor.visitIntInsn(SIPUSH, 4920);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitIntInsn(BIPUSH, 16);
     methodVisitor.visitIntInsn(SIPUSH, 6064);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitIntInsn(BIPUSH, 17);
     methodVisitor.visitIntInsn(SIPUSH, 6112);
     methodVisitor.visitInsn(CASTORE);

     int v6 =++ index;
     methodVisitor.visitVarInsn(ASTORE, v6);
     Label label8 = new Label();
     methodVisitor.visitLabel(label8);
     methodVisitor.visitLineNumber(126, label8);
     methodVisitor.visitInsn(ICONST_1);
     methodVisitor.visitTypeInsn(NEW, "java/util/Random");
     methodVisitor.visitInsn(DUP);
     methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/Random", "<init>", "()V", false);
     methodVisitor.visitIntInsn(BIPUSH, 30);
     methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextInt", "(I)I", false);
     methodVisitor.visitInsn(ISHL);

     int v7 =++ index;
     methodVisitor.visitVarInsn(ISTORE, v7);
     Label label9 = new Label();
     methodVisitor.visitLabel(label9);
     methodVisitor.visitLineNumber(128, label9);
     methodVisitor.visitVarInsn(ILOAD, v7);
     methodVisitor.visitInsn(ICONST_1);
     methodVisitor.visitVarInsn(ILOAD, v5);
     methodVisitor.visitInsn(ISHL);
     methodVisitor.visitInsn(IAND);
     Label label10 = new Label();
     methodVisitor.visitJumpInsn(IFNE, label10);
     Label label11 = new Label();
     methodVisitor.visitLabel(label11);
     methodVisitor.visitLineNumber(129, label11);
     methodVisitor.visitLdcInsn(new Integer(-2147483648));
     methodVisitor.visitVarInsn(ISTORE, v5);
     methodVisitor.visitLabel(label10);
     methodVisitor.visitLineNumber(131, label10);
     methodVisitor.visitVarInsn(ALOAD, v6);
     methodVisitor.visitVarInsn(ILOAD, v5);
     methodVisitor.visitInsn(CALOAD);

     int v8 =++ index;
     methodVisitor.visitVarInsn(ISTORE, v8);
     Label label12 = new Label();
     methodVisitor.visitLabel(label12);
     methodVisitor.visitLineNumber(132, label12);
     methodVisitor.visitVarInsn(ILOAD, v5);
     methodVisitor.visitIntInsn(BIPUSH, 16);
     Label label13 = new Label();
     methodVisitor.visitJumpInsn(IF_ICMPNE, label13);
     methodVisitor.visitIntInsn(BIPUSH, 49);
     Label label14 = new Label();
     methodVisitor.visitJumpInsn(GOTO, label14);
     methodVisitor.visitLabel(label13);
     methodVisitor.visitIntInsn(BIPUSH, 48);
     methodVisitor.visitLabel(label14);

     int v9 =++ index;
     methodVisitor.visitVarInsn(ISTORE, v9);
     Label label15 = new Label();
     methodVisitor.visitLabel(label15);
     methodVisitor.visitLineNumber(133, label15);
     methodVisitor.visitMethodInsn(INVOKESTATIC, "java/util/Calendar", "getInstance", "()Ljava/util/Calendar;", false);
     methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Calendar", "getTime", "()Ljava/util/Date;", false);
     methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Date", "toString", "()Ljava/lang/String;", false);
     methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "toCharArray", "()[C", false);

     int v10 =++ index;
     methodVisitor.visitVarInsn(ASTORE, v10);
     Label label16 = new Label();
     methodVisitor.visitLabel(label16);
     methodVisitor.visitLineNumber(134, label16);
     methodVisitor.visitInsn(ICONST_0);

     int v11 =++ index;
     methodVisitor.visitVarInsn(ISTORE, v11);
     Label label17 = new Label();
     methodVisitor.visitLabel(label17);
     methodVisitor.visitVarInsn(ILOAD, v11);
     methodVisitor.visitInsn(ICONST_3);
     Label label18 = new Label();
     methodVisitor.visitJumpInsn(IF_ICMPGE, label18);
     Label label19 = new Label();
     methodVisitor.visitLabel(label19);
     methodVisitor.visitLineNumber(135, label19);
     methodVisitor.visitVarInsn(ALOAD, v10);
     methodVisitor.visitVarInsn(ILOAD, v11);
     methodVisitor.visitInsn(CALOAD);

     int v12 =++ index;
     methodVisitor.visitVarInsn(ISTORE, v12);
     Label label20 = new Label();
     methodVisitor.visitLabel(label20);
     methodVisitor.visitLineNumber(136, label20);
     methodVisitor.visitVarInsn(ILOAD, v12);
     methodVisitor.visitVarInsn(ILOAD, v9);
     Label label21 = new Label();
     methodVisitor.visitJumpInsn(IF_ICMPLT, label21);
     methodVisitor.visitVarInsn(ILOAD, v12);
     methodVisitor.visitIntInsn(BIPUSH, 57);
     methodVisitor.visitJumpInsn(IF_ICMPGT, label21);
     Label label22 = new Label();
     methodVisitor.visitLabel(label22);
     methodVisitor.visitLineNumber(137, label22);
     methodVisitor.visitVarInsn(ALOAD, v10);
     methodVisitor.visitVarInsn(ILOAD, v11);
     methodVisitor.visitVarInsn(ILOAD, v12);
     methodVisitor.visitVarInsn(ILOAD, v8);
     methodVisitor.visitInsn(IADD);
     methodVisitor.visitInsn(I2C);
     methodVisitor.visitInsn(CASTORE);
     methodVisitor.visitLabel(label21);
     methodVisitor.visitLineNumber(134, label21);
     methodVisitor.visitIincInsn(v11, 1);
     methodVisitor.visitJumpInsn(GOTO, label17);
     methodVisitor.visitLabel(label18);
     methodVisitor.visitLineNumber(141, label18);
     methodVisitor.visitVarInsn(ALOAD, v4);
     methodVisitor.visitInsn(MONITOREXIT);

//     methodVisitor.visitLabel(label1);
//     methodVisitor.visitJumpInsn(GOTO, label5);
//
//     methodVisitor.visitLabel(label2);
//     methodVisitor.visitVarInsn(ASTORE, 13);
//     methodVisitor.visitVarInsn(ALOAD, 4);
//     methodVisitor.visitInsn(MONITOREXIT);
//
//     methodVisitor.visitLabel(label3);
//     methodVisitor.visitVarInsn(ALOAD, 13);
//     methodVisitor.visitInsn(ATHROW);

     methodVisitor.visitLabel(label5);
     methodVisitor.visitLineNumber(149, label5);
//     methodVisitor.visitInsn(RETURN);
//     Label label23 = new Label();
//     methodVisitor.visitLabel(label23);
//     methodVisitor.visitLocalVariable("c", "C", null, label20, label21, v12);
//     methodVisitor.visitLocalVariable("i", "I", null, label17, label18, v11);
//     methodVisitor.visitLocalVariable("ctxKey", "I", null, label7, label18, v5);
//     methodVisitor.visitLocalVariable("bases", "[C", null, label8, label18, v6);
//     methodVisitor.visitLocalVariable("mask", "I", null, label9, label18, v7);
//     methodVisitor.visitLocalVariable("base", "I", null, label12, label18, v8);
//     methodVisitor.visitLocalVariable("minDigit", "C", null, label15, label18, v9);
//     methodVisitor.visitLocalVariable("text", "[C", null, label16, label18, v10);
//     methodVisitor.visitLocalVariable("this", "Lcom/dn/junkcode/MainActivity;", null, label4, label23, 0);
//     methodVisitor.visitLocalVariable("context", "Landroid/content/Context;", null, label4, label23, 1);
//     methodVisitor.visitLocalVariable("str", "Ljava/lang/String;", null, label4, label23, 2);
//     methodVisitor.visitLocalVariable("str2", "Ljava/lang/String;", null, label4, label23, 3);


    }
}
