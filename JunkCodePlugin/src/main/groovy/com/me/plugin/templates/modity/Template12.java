package com.me.plugin.templates.modity;

import static org.objectweb.asm.Opcodes.*;

import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;

public class Template12 {

    public static void  modifyFromCode(MethodVisitor methodVisitor,int index){

        Label label0 = new Label();
        Label label1 = new Label();
        Label label2 = new Label();
        methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/io/IOException");
        Label label3 = new Label();
        Label label4 = new Label();
        Label label5 = new Label();
        methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/lang/Throwable");
        Label label6 = new Label();
        Label label7 = new Label();
        Label label8 = new Label();
        methodVisitor.visitTryCatchBlock(label6, label7, label8, "java/lang/Throwable");
        Label label9 = new Label();
        methodVisitor.visitTryCatchBlock(label6, label7, label9, null);
        Label label10 = new Label();
        Label label11 = new Label();
        Label label12 = new Label();
        methodVisitor.visitTryCatchBlock(label10, label11, label12, "java/lang/Throwable");
        Label label13 = new Label();
        methodVisitor.visitTryCatchBlock(label8, label13, label9, null);
        Label label14 = new Label();
        Label label15 = new Label();
        Label label16 = new Label();
        methodVisitor.visitTryCatchBlock(label14, label15, label16, "java/io/IOException");
        Label label17 = new Label();
        methodVisitor.visitLabel(label17);
        methodVisitor.visitLineNumber(73, label17);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/nio/charset/Charset", "defaultCharset", "()Ljava/nio/charset/Charset;", false);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "identityHashCode", "(Ljava/lang/Object;)I", false);
        methodVisitor.visitInsn(I2L);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "nanoTime", "()J", false);
        methodVisitor.visitInsn(LAND);
        methodVisitor.visitInsn(LCONST_0);
        methodVisitor.visitInsn(LCMP);
        Label label18 = new Label();
        methodVisitor.visitJumpInsn(IFNE, label18);
        Label label19 = new Label();
        methodVisitor.visitLabel(label19);
        methodVisitor.visitLineNumber(74, label19);
        methodVisitor.visitInsn(ACONST_NULL);

        int v1 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v1);
        Label label20 = new Label();
        methodVisitor.visitLabel(label20);
        methodVisitor.visitLineNumber(75, label20);
        methodVisitor.visitFieldInsn(GETSTATIC, "android/os/Build$VERSION", "SDK_INT", "I");
        methodVisitor.visitIntInsn(BIPUSH, 26);
        Label label21 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPLT, label21);
        methodVisitor.visitLabel(label0);
        methodVisitor.visitLineNumber(77, label0);
        methodVisitor.visitLdcInsn("temp/dir/a.ak");
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/String");
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/nio/file/Paths", "get", "(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;", false);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/nio/file/StandardOpenOption", "CREATE", "Ljava/nio/file/StandardOpenOption;");
        methodVisitor.visitFieldInsn(GETSTATIC, "java/nio/file/StandardOpenOption", "TRUNCATE_EXISTING", "Ljava/nio/file/StandardOpenOption;");
        methodVisitor.visitFieldInsn(GETSTATIC, "java/nio/file/StandardOpenOption", "WRITE", "Ljava/nio/file/StandardOpenOption;");
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/util/EnumSet", "of", "(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;", false);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitTypeInsn(ANEWARRAY, "java/nio/file/attribute/FileAttribute");
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/nio/file/Files", "newByteChannel", "(Ljava/nio/file/Path;Ljava/util/Set;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/SeekableByteChannel;", false);
        methodVisitor.visitVarInsn(ASTORE, v1);
        methodVisitor.visitLabel(label1);
        methodVisitor.visitLineNumber(80, label1);
        methodVisitor.visitJumpInsn(GOTO, label21);
        methodVisitor.visitLabel(label2);
        methodVisitor.visitLineNumber(78, label2);

        int v2 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v2);
        Label label22 = new Label();
        methodVisitor.visitLabel(label22);
        methodVisitor.visitLineNumber(79, label22);
        methodVisitor.visitVarInsn(ALOAD, v2);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/IOException", "printStackTrace", "()V", false);
        methodVisitor.visitLabel(label21);
        methodVisitor.visitLineNumber(82, label21);
        methodVisitor.visitInsn(ACONST_NULL);
        methodVisitor.visitVarInsn(ASTORE, v2);
        Label label23 = new Label();
        methodVisitor.visitLabel(label23);
        methodVisitor.visitLineNumber(83, label23);
        methodVisitor.visitFieldInsn(GETSTATIC, "android/os/Build$VERSION", "SDK_INT", "I");
        methodVisitor.visitIntInsn(BIPUSH, 26);
        Label label24 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPLT, label24);
        Label label25 = new Label();
        methodVisitor.visitLabel(label25);
        methodVisitor.visitLineNumber(84, label25);
        methodVisitor.visitLdcInsn("");
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/String");
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/nio/file/Paths", "get", "(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;", false);
        methodVisitor.visitVarInsn(ASTORE, v2);
        methodVisitor.visitLabel(label24);
        methodVisitor.visitLineNumber(86, label24);
        methodVisitor.visitInsn(ICONST_M1);

        int v3 = ++index;
        methodVisitor.visitVarInsn(ISTORE, v3);
        Label label26 = new Label();
        methodVisitor.visitLabel(label26);
        methodVisitor.visitLineNumber(87, label26);
        methodVisitor.visitInsn(ICONST_M1);

        int v4 = ++index;
        methodVisitor.visitVarInsn(ISTORE, v4);
        Label label27 = new Label();
        methodVisitor.visitLabel(label27);
        methodVisitor.visitLineNumber(88, label27);
        methodVisitor.visitInsn(ICONST_0);

        int v5 = ++index;
        methodVisitor.visitVarInsn(ISTORE, v5);
        Label label28 = new Label();
        methodVisitor.visitLabel(label28);
        methodVisitor.visitLineNumber(89, label28);
        methodVisitor.visitVarInsn(ILOAD, v3);

        int v6 = ++index;
        methodVisitor.visitVarInsn(ISTORE, v6);
        Label label29 = new Label();
        methodVisitor.visitLabel(label29);
        methodVisitor.visitLineNumber(91, label29);
        methodVisitor.visitVarInsn(ILOAD, v5);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/nio/ByteBuffer", "allocate", "(I)Ljava/nio/ByteBuffer;", false);

        int v7 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v7);
        Label label30 = new Label();
        methodVisitor.visitLabel(label30);
        methodVisitor.visitLineNumber(92, label30);
        methodVisitor.visitFieldInsn(GETSTATIC, "android/os/Build$VERSION", "SDK_INT", "I");
        methodVisitor.visitIntInsn(BIPUSH, 26);
        methodVisitor.visitJumpInsn(IF_ICMPLT, label18);
        methodVisitor.visitLabel(label14);
        methodVisitor.visitLineNumber(93, label14);
        methodVisitor.visitVarInsn(ALOAD, v2);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitTypeInsn(ANEWARRAY, "java/nio/file/OpenOption");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/nio/file/StandardOpenOption", "READ", "Ljava/nio/file/StandardOpenOption;");
        methodVisitor.visitInsn(AASTORE);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/nio/file/Files", "newByteChannel", "(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;", false);

        int v8 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v8);
        Label label31 = new Label();
        methodVisitor.visitLabel(label31);
        methodVisitor.visitInsn(ACONST_NULL);

        int v9 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v9);
        methodVisitor.visitLabel(label6);
        methodVisitor.visitLineNumber(94, label6);
        methodVisitor.visitVarInsn(ALOAD, v8);
        methodVisitor.visitVarInsn(ILOAD, v6);
        methodVisitor.visitInsn(I2L);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/nio/channels/SeekableByteChannel", "position", "(J)Ljava/nio/channels/SeekableByteChannel;", true);
        methodVisitor.visitInsn(POP);
        Label label32 = new Label();
        methodVisitor.visitLabel(label32);
        methodVisitor.visitLineNumber(96, label32);
        methodVisitor.visitVarInsn(ALOAD, v7);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/nio/ByteBuffer", "clear", "()Ljava/nio/Buffer;", false);
        methodVisitor.visitInsn(POP);
        Label label33 = new Label();
        methodVisitor.visitLabel(label33);
        methodVisitor.visitLineNumber(97, label33);
        methodVisitor.visitVarInsn(ALOAD, v8);
        methodVisitor.visitVarInsn(ALOAD, v7);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/nio/channels/SeekableByteChannel", "read", "(Ljava/nio/ByteBuffer;)I", true);

        int v10 = ++index;
        methodVisitor.visitVarInsn(ISTORE, v10);
        Label label34 = new Label();
        methodVisitor.visitLabel(label34);
        methodVisitor.visitLineNumber(98, label34);
        methodVisitor.visitVarInsn(ALOAD, v7);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/nio/ByteBuffer", "rewind", "()Ljava/nio/Buffer;", false);
        methodVisitor.visitInsn(POP);
        Label label35 = new Label();
        methodVisitor.visitLabel(label35);
        methodVisitor.visitLineNumber(99, label35);
        methodVisitor.visitVarInsn(ILOAD, v6);
        methodVisitor.visitVarInsn(ILOAD, v10);
        methodVisitor.visitInsn(IADD);
        methodVisitor.visitVarInsn(ILOAD, v4);
        Label label36 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPGT, label36);
        Label label37 = new Label();
        methodVisitor.visitLabel(label37);
        methodVisitor.visitLineNumber(100, label37);
        methodVisitor.visitVarInsn(ALOAD, v7);
        methodVisitor.visitVarInsn(ILOAD, v10);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/nio/ByteBuffer", "limit", "(I)Ljava/nio/Buffer;", false);
        methodVisitor.visitInsn(POP);
        Label label38 = new Label();
        methodVisitor.visitLabel(label38);
        methodVisitor.visitLineNumber(101, label38);
        methodVisitor.visitVarInsn(ALOAD, v1);
        methodVisitor.visitVarInsn(ALOAD, v7);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/nio/channels/SeekableByteChannel", "write", "(Ljava/nio/ByteBuffer;)I", true);
        methodVisitor.visitInsn(POP);
        Label label39 = new Label();
        methodVisitor.visitLabel(label39);
        methodVisitor.visitLineNumber(102, label39);
        methodVisitor.visitVarInsn(ILOAD, v6);
        methodVisitor.visitVarInsn(ILOAD, v10);
        methodVisitor.visitInsn(IADD);
        methodVisitor.visitVarInsn(ISTORE, v6);
        Label label40 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label40);
        methodVisitor.visitLabel(label36);
        methodVisitor.visitLineNumber(104, label36);
        methodVisitor.visitVarInsn(ALOAD, v7);
        methodVisitor.visitVarInsn(ILOAD, v4);
        methodVisitor.visitVarInsn(ILOAD, v6);
        methodVisitor.visitInsn(ISUB);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitInsn(IADD);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/nio/ByteBuffer", "limit", "(I)Ljava/nio/Buffer;", false);
        methodVisitor.visitInsn(POP);
        Label label41 = new Label();
        methodVisitor.visitLabel(label41);
        methodVisitor.visitLineNumber(105, label41);
        methodVisitor.visitVarInsn(ALOAD, v1);
        methodVisitor.visitVarInsn(ALOAD, v7);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/nio/channels/SeekableByteChannel", "write", "(Ljava/nio/ByteBuffer;)I", true);
        methodVisitor.visitInsn(POP);
        Label label42 = new Label();
        methodVisitor.visitLabel(label42);
        methodVisitor.visitLineNumber(106, label42);
        methodVisitor.visitJumpInsn(GOTO, label7);
        methodVisitor.visitLabel(label40);
        methodVisitor.visitLineNumber(108, label40);
        methodVisitor.visitJumpInsn(GOTO, label32);
        methodVisitor.visitLabel(label7);
        methodVisitor.visitLineNumber(109, label7);
        methodVisitor.visitVarInsn(ALOAD, v8);
        methodVisitor.visitJumpInsn(IFNULL, label15);
        methodVisitor.visitVarInsn(ALOAD, v9);
        Label label43 = new Label();
        methodVisitor.visitJumpInsn(IFNULL, label43);
        methodVisitor.visitLabel(label3);
        methodVisitor.visitVarInsn(ALOAD, v8);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/nio/channels/SeekableByteChannel", "close", "()V", true);
        methodVisitor.visitLabel(label4);
        methodVisitor.visitJumpInsn(GOTO, label15);
        methodVisitor.visitLabel(label5);
        methodVisitor.visitVarInsn(ASTORE, v10);
        methodVisitor.visitVarInsn(ALOAD, v9);
        methodVisitor.visitVarInsn(ALOAD, v10);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Throwable", "addSuppressed", "(Ljava/lang/Throwable;)V", false);
        methodVisitor.visitJumpInsn(GOTO, label15);
        methodVisitor.visitLabel(label43);
        methodVisitor.visitVarInsn(ALOAD, v8);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/nio/channels/SeekableByteChannel", "close", "()V", true);
        methodVisitor.visitJumpInsn(GOTO, label15);
        methodVisitor.visitLabel(label8);
        methodVisitor.visitLineNumber(93, label8);
        methodVisitor.visitVarInsn(ASTORE, v10);
        methodVisitor.visitVarInsn(ALOAD, v10);
        methodVisitor.visitVarInsn(ASTORE, v9);
        methodVisitor.visitVarInsn(ALOAD, v10);
        methodVisitor.visitInsn(ATHROW);
        methodVisitor.visitLabel(label9);
        methodVisitor.visitLineNumber(109, label9);


        int v11 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v11);
        methodVisitor.visitLabel(label13);
        methodVisitor.visitVarInsn(ALOAD, v8);
        Label label44 = new Label();
        methodVisitor.visitJumpInsn(IFNULL, label44);
        methodVisitor.visitVarInsn(ALOAD, v9);
        Label label45 = new Label();
        methodVisitor.visitJumpInsn(IFNULL, label45);
        methodVisitor.visitLabel(label10);
        methodVisitor.visitVarInsn(ALOAD, v8);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/nio/channels/SeekableByteChannel", "close", "()V", true);
        methodVisitor.visitLabel(label11);
        methodVisitor.visitJumpInsn(GOTO, label44);
        methodVisitor.visitLabel(label12);

        int v12 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v12);
        methodVisitor.visitVarInsn(ALOAD, v9);
        methodVisitor.visitVarInsn(ALOAD, v12);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Throwable", "addSuppressed", "(Ljava/lang/Throwable;)V", false);
        methodVisitor.visitJumpInsn(GOTO, label44);
        methodVisitor.visitLabel(label45);
        methodVisitor.visitVarInsn(ALOAD, v8);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/nio/channels/SeekableByteChannel", "close", "()V", true);
        methodVisitor.visitLabel(label44);
        methodVisitor.visitVarInsn(ALOAD, v11);
        methodVisitor.visitInsn(ATHROW);
        methodVisitor.visitLabel(label15);
        methodVisitor.visitLineNumber(111, label15);
        methodVisitor.visitJumpInsn(GOTO, label18);
        methodVisitor.visitLabel(label16);
        methodVisitor.visitLineNumber(109, label16);
        methodVisitor.visitVarInsn(ASTORE, v8);
        Label label46 = new Label();
        methodVisitor.visitLabel(label46);
        methodVisitor.visitLineNumber(110, label46);
        methodVisitor.visitVarInsn(ALOAD, v8);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/IOException", "printStackTrace", "()V", false);
        methodVisitor.visitLabel(label18);
        methodVisitor.visitLineNumber(114, label18);

    }
}
