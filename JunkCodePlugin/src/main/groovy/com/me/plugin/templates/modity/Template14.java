package com.me.plugin.templates.modity;

import static org.objectweb.asm.Opcodes.*;

import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;

public class Template14 {

    public static void  modifyFromCode(MethodVisitor methodVisitor,int index){
        Label label0 = new Label();
        Label label1 = new Label();
        Label label2 = new Label();
        methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/Throwable");
        Label label3 = new Label();
        Label label4 = new Label();
        Label label5 = new Label();
        methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/lang/Throwable");
        Label label6 = new Label();
        methodVisitor.visitTryCatchBlock(label3, label4, label6, null);
        Label label7 = new Label();
        Label label8 = new Label();
        Label label9 = new Label();
        methodVisitor.visitTryCatchBlock(label7, label8, label9, "java/lang/Throwable");
        Label label10 = new Label();
        methodVisitor.visitTryCatchBlock(label5, label10, label6, null);
        Label label11 = new Label();
        Label label12 = new Label();
        Label label13 = new Label();
        methodVisitor.visitTryCatchBlock(label11, label12, label13, "java/lang/Exception");
        Label label14 = new Label();
        methodVisitor.visitLabel(label14);
        methodVisitor.visitLineNumber(81, label14);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/ClassLoader", "getSystemClassLoader", "()Ljava/lang/ClassLoader;", false);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "identityHashCode", "(Ljava/lang/Object;)I", false);
        methodVisitor.visitInsn(I2L);
        methodVisitor.visitLdcInsn(new Long(31449600000L));
        methodVisitor.visitInsn(LAND);
        methodVisitor.visitInsn(LCONST_0);
        methodVisitor.visitInsn(LCMP);
        Label label15 = new Label();
        methodVisitor.visitJumpInsn(IFNE, label15);
        methodVisitor.visitLabel(label11);
        methodVisitor.visitLineNumber(83, label11);
        methodVisitor.visitLdcInsn("hijrah");

        int v1 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v1);
        Label label16 = new Label();
        methodVisitor.visitLabel(label16);
        methodVisitor.visitLineNumber(84, label16);
        methodVisitor.visitVarInsn(ALOAD, v1);
        methodVisitor.visitLdcInsn("Resource missing forhijrah");
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/util/Objects", "requireNonNull", "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;", false);
        methodVisitor.visitInsn(POP);
        Label label17 = new Label();
        methodVisitor.visitLabel(label17);
        methodVisitor.visitLineNumber(85, label17);
        methodVisitor.visitTypeInsn(NEW, "java/util/Properties");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/Properties", "<init>", "()V", false);

        int v2 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v2);
        Label label18 = new Label();
        methodVisitor.visitLabel(label18);
        methodVisitor.visitLineNumber(86, label18);
        methodVisitor.visitVarInsn(ALOAD, v1);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/ClassLoader", "getSystemResourceAsStream", "(Ljava/lang/String;)Ljava/io/InputStream;", false);

        int v3 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v3);
        Label label19 = new Label();
        methodVisitor.visitLabel(label19);
        methodVisitor.visitInsn(ACONST_NULL);

        int v4= ++index;
        methodVisitor.visitVarInsn(ASTORE, v4);
        methodVisitor.visitLabel(label3);
        methodVisitor.visitLineNumber(87, label3);
        methodVisitor.visitVarInsn(ALOAD, v2);
        methodVisitor.visitVarInsn(ALOAD, v3);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "load", "(Ljava/io/InputStream;)V", false);
        methodVisitor.visitLabel(label4);
        methodVisitor.visitLineNumber(88, label4);
        methodVisitor.visitVarInsn(ALOAD, v3);
        Label label20 = new Label();
        methodVisitor.visitJumpInsn(IFNULL, label20);
        methodVisitor.visitVarInsn(ALOAD, v4);
        Label label21 = new Label();
        methodVisitor.visitJumpInsn(IFNULL, label21);
        methodVisitor.visitLabel(label0);
        methodVisitor.visitVarInsn(ALOAD, v3);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/InputStream", "close", "()V", false);
        methodVisitor.visitLabel(label1);
        methodVisitor.visitJumpInsn(GOTO, label20);
        methodVisitor.visitLabel(label2);

        int v5 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v5);
        methodVisitor.visitVarInsn(ALOAD, v4);
        methodVisitor.visitVarInsn(ALOAD, v5);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Throwable", "addSuppressed", "(Ljava/lang/Throwable;)V", false);
        methodVisitor.visitJumpInsn(GOTO, label20);
        methodVisitor.visitLabel(label21);
        methodVisitor.visitVarInsn(ALOAD, v3);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/InputStream", "close", "()V", false);
        methodVisitor.visitJumpInsn(GOTO, label20);
        methodVisitor.visitLabel(label5);
        methodVisitor.visitLineNumber(86, label5);
        methodVisitor.visitVarInsn(ASTORE, v5);
        methodVisitor.visitVarInsn(ALOAD, v5);
        methodVisitor.visitVarInsn(ASTORE, v4);
        methodVisitor.visitVarInsn(ALOAD, v5);
        methodVisitor.visitInsn(ATHROW);
        methodVisitor.visitLabel(label6);
        methodVisitor.visitLineNumber(88, label6);

        int v6 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v6);
        methodVisitor.visitLabel(label10);
        methodVisitor.visitVarInsn(ALOAD, v3);
        Label label22 = new Label();
        methodVisitor.visitJumpInsn(IFNULL, label22);
        methodVisitor.visitVarInsn(ALOAD, v4);
        Label label23 = new Label();
        methodVisitor.visitJumpInsn(IFNULL, label23);
        methodVisitor.visitLabel(label7);
        methodVisitor.visitVarInsn(ALOAD, v3);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/InputStream", "close", "()V", false);
        methodVisitor.visitLabel(label8);
        methodVisitor.visitJumpInsn(GOTO, label22);
        methodVisitor.visitLabel(label9);

        int v7 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v7);
        methodVisitor.visitVarInsn(ALOAD, v4);
        methodVisitor.visitVarInsn(ALOAD, v7);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Throwable", "addSuppressed", "(Ljava/lang/Throwable;)V", false);
        methodVisitor.visitJumpInsn(GOTO, label22);
        methodVisitor.visitLabel(label23);
        methodVisitor.visitVarInsn(ALOAD, v3);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/InputStream", "close", "()V", false);
        methodVisitor.visitLabel(label22);
        methodVisitor.visitVarInsn(ALOAD, v6);
        methodVisitor.visitInsn(ATHROW);
        methodVisitor.visitLabel(label20);
        methodVisitor.visitLineNumber(90, label20);
        methodVisitor.visitInsn(ACONST_NULL);
        methodVisitor.visitVarInsn(ASTORE, v3);
        Label label24 = new Label();
        methodVisitor.visitLabel(label24);
        methodVisitor.visitLineNumber(91, label24);
        methodVisitor.visitInsn(ACONST_NULL);
        methodVisitor.visitVarInsn(ASTORE, v4);
        Label label25 = new Label();
        methodVisitor.visitLabel(label25);
        methodVisitor.visitLineNumber(92, label25);
        methodVisitor.visitInsn(ACONST_NULL);
        methodVisitor.visitVarInsn(ASTORE, v5);
        Label label26 = new Label();
        methodVisitor.visitLabel(label26);
        methodVisitor.visitLineNumber(93, label26);
        methodVisitor.visitVarInsn(ALOAD, v2);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Properties", "entrySet", "()Ljava/util/Set;", false);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "iterator", "()Ljava/util/Iterator;", true);
        methodVisitor.visitVarInsn(ASTORE, v6);
        Label label27 = new Label();
        methodVisitor.visitLabel(label27);
        methodVisitor.visitVarInsn(ALOAD, v6);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
        methodVisitor.visitJumpInsn(IFEQ, label12);
        methodVisitor.visitVarInsn(ALOAD, v6);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
        methodVisitor.visitTypeInsn(CHECKCAST, "java/util/Map$Entry");
        methodVisitor.visitVarInsn(ASTORE, v7);
        Label label28 = new Label();
        methodVisitor.visitLabel(label28);
        methodVisitor.visitLineNumber(94, label28);
        methodVisitor.visitVarInsn(ALOAD, v7);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map$Entry", "getKey", "()Ljava/lang/Object;", true);
        methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");

        int v8 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v8);
        Label label29 = new Label();
        methodVisitor.visitLabel(label29);
        methodVisitor.visitLineNumber(95, label29);
        methodVisitor.visitVarInsn(ALOAD, v8);

        int v9 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v9);
        methodVisitor.visitInsn(ICONST_M1);

        int v10= ++index;
        methodVisitor.visitVarInsn(ISTORE, v10);
        methodVisitor.visitVarInsn(ALOAD, v9);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "hashCode", "()I", false);
        Label label30 = new Label();
        Label label31 = new Label();
        Label label32 = new Label();
        Label label33 = new Label();
        Label label34 = new Label();
        methodVisitor.visitLookupSwitchInsn(label34, new int[]{3355, 104581, 3575610, 351608024}, new Label[]{label30, label31, label32, label33});
        methodVisitor.visitLabel(label30);
        methodVisitor.visitVarInsn(ALOAD, v9);
        methodVisitor.visitLdcInsn("id");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
        methodVisitor.visitJumpInsn(IFEQ, label34);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ISTORE, v10);
        methodVisitor.visitJumpInsn(GOTO, label34);
        methodVisitor.visitLabel(label32);
        methodVisitor.visitVarInsn(ALOAD, v9);
        methodVisitor.visitLdcInsn("type");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
        methodVisitor.visitJumpInsn(IFEQ, label34);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitVarInsn(ISTORE, v10);
        methodVisitor.visitJumpInsn(GOTO, label34);
        methodVisitor.visitLabel(label33);
        methodVisitor.visitVarInsn(ALOAD, v9);
        methodVisitor.visitLdcInsn("version");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
        methodVisitor.visitJumpInsn(IFEQ, label34);
        methodVisitor.visitInsn(ICONST_2);
        methodVisitor.visitVarInsn(ISTORE, v10);
        methodVisitor.visitJumpInsn(GOTO, label34);
        methodVisitor.visitLabel(label31);
        methodVisitor.visitVarInsn(ALOAD, v9);
        methodVisitor.visitLdcInsn("iso");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
        methodVisitor.visitJumpInsn(IFEQ, label34);
        methodVisitor.visitInsn(ICONST_3);
        methodVisitor.visitVarInsn(ISTORE, v10);
        methodVisitor.visitLabel(label34);
        methodVisitor.visitVarInsn(ILOAD, v10);
        Label label35 = new Label();
        Label label36 = new Label();
        Label label37 = new Label();
        Label label38 = new Label();
        Label label39 = new Label();
        methodVisitor.visitTableSwitchInsn(0, 3, label39, new Label[]{label35, label36, label37, label38});
        methodVisitor.visitLabel(label35);
        methodVisitor.visitLineNumber(97, label35);
        methodVisitor.visitVarInsn(ALOAD, v7);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map$Entry", "getValue", "()Ljava/lang/Object;", true);
        methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
        methodVisitor.visitVarInsn(ASTORE, v3);
        Label label40 = new Label();
        methodVisitor.visitLabel(label40);
        methodVisitor.visitLineNumber(98, label40);
        methodVisitor.visitJumpInsn(GOTO, label39);
        methodVisitor.visitLabel(label36);
        methodVisitor.visitLineNumber(100, label36);
        methodVisitor.visitVarInsn(ALOAD, v7);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map$Entry", "getValue", "()Ljava/lang/Object;", true);
        methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
        methodVisitor.visitVarInsn(ASTORE, v4);
        Label label41 = new Label();
        methodVisitor.visitLabel(label41);
        methodVisitor.visitLineNumber(101, label41);
        methodVisitor.visitJumpInsn(GOTO, label39);
        methodVisitor.visitLabel(label37);
        methodVisitor.visitLineNumber(103, label37);
        methodVisitor.visitVarInsn(ALOAD, v7);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Map$Entry", "getValue", "()Ljava/lang/Object;", true);
        methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
        methodVisitor.visitVarInsn(ASTORE, v5);
        Label label42 = new Label();
        methodVisitor.visitLabel(label42);
        methodVisitor.visitLineNumber(104, label42);
        methodVisitor.visitJumpInsn(GOTO, label39);
        methodVisitor.visitLabel(label38);
        methodVisitor.visitLineNumber(106, label38);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitVarInsn(ALOAD, v3);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ALOAD, v5);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ALOAD, v4);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        Label label43 = new Label();
        methodVisitor.visitLabel(label43);
        methodVisitor.visitLineNumber(107, label43);
        methodVisitor.visitJumpInsn(GOTO, label39);
        methodVisitor.visitLabel(label39);
        methodVisitor.visitLineNumber(113, label39);
        methodVisitor.visitJumpInsn(GOTO, label27);
        methodVisitor.visitLabel(label12);
        methodVisitor.visitLineNumber(117, label12);
        methodVisitor.visitJumpInsn(GOTO, label15);
        methodVisitor.visitLabel(label13);
        methodVisitor.visitLineNumber(115, label13);
        methodVisitor.visitVarInsn(ASTORE, v1);
        methodVisitor.visitLabel(label15);
        methodVisitor.visitLineNumber(119, label15);


    }
}
