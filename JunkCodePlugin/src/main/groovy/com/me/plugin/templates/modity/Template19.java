package com.me.plugin.templates.modity;

import static org.objectweb.asm.Opcodes.ALOAD;
import static org.objectweb.asm.Opcodes.ASTORE;
import static org.objectweb.asm.Opcodes.ATHROW;
import static org.objectweb.asm.Opcodes.BIPUSH;
import static org.objectweb.asm.Opcodes.DUP;
import static org.objectweb.asm.Opcodes.GOTO;
import static org.objectweb.asm.Opcodes.I2L;
import static org.objectweb.asm.Opcodes.IADD;
import static org.objectweb.asm.Opcodes.ICONST_0;
import static org.objectweb.asm.Opcodes.ICONST_1;
import static org.objectweb.asm.Opcodes.ICONST_3;
import static org.objectweb.asm.Opcodes.ICONST_M1;
import static org.objectweb.asm.Opcodes.IFEQ;
import static org.objectweb.asm.Opcodes.IFNE;
import static org.objectweb.asm.Opcodes.IF_ICMPEQ;
import static org.objectweb.asm.Opcodes.IF_ICMPGE;
import static org.objectweb.asm.Opcodes.ILOAD;
import static org.objectweb.asm.Opcodes.INVOKESPECIAL;
import static org.objectweb.asm.Opcodes.INVOKESTATIC;
import static org.objectweb.asm.Opcodes.INVOKEVIRTUAL;
import static org.objectweb.asm.Opcodes.ISTORE;
import static org.objectweb.asm.Opcodes.LAND;
import static org.objectweb.asm.Opcodes.LCMP;
import static org.objectweb.asm.Opcodes.LCONST_0;
import static org.objectweb.asm.Opcodes.NEW;
import static org.objectweb.asm.Opcodes.POP;

import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;

public class Template19 {

    public static void  modifyFromCode(MethodVisitor methodVisitor,int index){
        Label label0 = new Label();
        methodVisitor.visitLabel(label0);
        methodVisitor.visitLineNumber(89, label0);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/nio/charset/Charset", "defaultCharset", "()Ljava/nio/charset/Charset;", false);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "identityHashCode", "(Ljava/lang/Object;)I", false);
        methodVisitor.visitInsn(I2L);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "nanoTime", "()J", false);
        methodVisitor.visitInsn(LAND);
        methodVisitor.visitInsn(LCONST_0);
        methodVisitor.visitInsn(LCMP);
        Label label1 = new Label();
        methodVisitor.visitJumpInsn(IFNE, label1);
        Label label2 = new Label();
        methodVisitor.visitLabel(label2);
        methodVisitor.visitLineNumber(90, label2);
        methodVisitor.visitTypeInsn(NEW, "java/util/Random");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/Random", "<init>", "()V", false);
        methodVisitor.visitIntInsn(BIPUSH, 7);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextInt", "(I)I", false);
        methodVisitor.visitInsn(ICONST_3);
        methodVisitor.visitInsn(IADD);

        int v1 = ++index;
        methodVisitor.visitVarInsn(ISTORE,v1);
        Label label3 = new Label();
        methodVisitor.visitLabel(label3);
        methodVisitor.visitLineNumber(91, label3);
        methodVisitor.visitTypeInsn(NEW, "java/util/Random");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/Random", "<init>", "()V", false);

        int v2 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v2);
        Label label4 = new Label();
        methodVisitor.visitLabel(label4);
        methodVisitor.visitLineNumber(92, label4);
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);

        int v3 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v3);
        Label label5 = new Label();
        methodVisitor.visitLabel(label5);
        methodVisitor.visitLineNumber(93, label5);
        methodVisitor.visitInsn(ICONST_0);

        int v4 = ++index;
        methodVisitor.visitVarInsn(ISTORE,v4);
        Label label6 = new Label();
        methodVisitor.visitLabel(label6);
        methodVisitor.visitVarInsn(ILOAD,v4);
        methodVisitor.visitVarInsn(ILOAD,v1);
        Label label7 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
        Label label8 = new Label();
        methodVisitor.visitLabel(label8);
        methodVisitor.visitLineNumber(94, label8);
        methodVisitor.visitVarInsn(ALOAD,v3);
        methodVisitor.visitLdcInsn("abcdefghijklmnopqrstuvwxyz");
        methodVisitor.visitVarInsn(ALOAD,v2);
        methodVisitor.visitIntInsn(BIPUSH, 26);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextInt", "(I)I", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "charAt", "(I)C", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(C)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitInsn(POP);
        Label label9 = new Label();
        methodVisitor.visitLabel(label9);
        methodVisitor.visitLineNumber(93, label9);
        methodVisitor.visitIincInsn(v4, 1);
        methodVisitor.visitJumpInsn(GOTO, label6);
        methodVisitor.visitLabel(label7);
        methodVisitor.visitLineNumber(96, label7);
        methodVisitor.visitVarInsn(ALOAD,v3);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE,v4);
        Label label10 = new Label();
        methodVisitor.visitLabel(label10);
        methodVisitor.visitLineNumber(98, label10);
        methodVisitor.visitLdcInsn("\\,");

        int v5 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v5);
        Label label11 = new Label();
        methodVisitor.visitLabel(label11);
        methodVisitor.visitLineNumber(99, label11);
        methodVisitor.visitLdcInsn("\\.");

        int v6 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v6);
        Label label12 = new Label();
        methodVisitor.visitLabel(label12);
        methodVisitor.visitLineNumber(100, label12);
        methodVisitor.visitLdcInsn("\\-");

        int v7 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v7);
        Label label13 = new Label();
        methodVisitor.visitLabel(label13);
        methodVisitor.visitLineNumber(101, label13);
        methodVisitor.visitLdcInsn("");

        int v8 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v8);
        Label label14 = new Label();
        methodVisitor.visitLabel(label14);
        methodVisitor.visitLineNumber(102, label14);
        methodVisitor.visitLdcInsn("NaN");

        int v9 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v9);
        Label label15 = new Label();
        methodVisitor.visitLabel(label15);
        methodVisitor.visitLineNumber(103, label15);
        methodVisitor.visitLdcInsn("Infinity");

        int v10 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v10);
        Label label16 = new Label();
        methodVisitor.visitLabel(label16);
        methodVisitor.visitLineNumber(104, label16);
        methodVisitor.visitLdcInsn("[\\p{javaDigit}&&[^0-9]]");
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/util/regex/Pattern", "compile", "(Ljava/lang/String;)Ljava/util/regex/Pattern;", false);

        int v11 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v11);
        Label label17 = new Label();
        methodVisitor.visitLabel(label17);
        methodVisitor.visitLineNumber(107, label17);
        methodVisitor.visitVarInsn(ALOAD,v4);
        methodVisitor.visitVarInsn(ALOAD,v5);
        methodVisitor.visitLdcInsn("");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "replaceAll", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);

        int v12 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v12);
        Label label18 = new Label();
        methodVisitor.visitLabel(label18);
        methodVisitor.visitLineNumber(108, label18);
        methodVisitor.visitInsn(ICONST_0);

        int v13 = ++index;
        methodVisitor.visitVarInsn(ISTORE,v13);
        Label label19 = new Label();
        methodVisitor.visitLabel(label19);
        methodVisitor.visitLineNumber(109, label19);
        methodVisitor.visitVarInsn(ALOAD,v7);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);

        int v14 = ++index;
        methodVisitor.visitVarInsn(ISTORE,v14);
        Label label20 = new Label();
        methodVisitor.visitLabel(label20);
        methodVisitor.visitLineNumber(110, label20);
        methodVisitor.visitVarInsn(ALOAD,v12);
        methodVisitor.visitVarInsn(ALOAD,v7);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "startsWith", "(Ljava/lang/String;)Z", false);
        Label label21 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label21);
        Label label22 = new Label();
        methodVisitor.visitLabel(label22);
        methodVisitor.visitLineNumber(111, label22);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitVarInsn(ISTORE,v13);
        Label label23 = new Label();
        methodVisitor.visitLabel(label23);
        methodVisitor.visitLineNumber(112, label23);
        methodVisitor.visitVarInsn(ALOAD,v12);
        methodVisitor.visitVarInsn(ILOAD,v14);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(I)Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE,v12);
        methodVisitor.visitLabel(label21);
        methodVisitor.visitLineNumber(114, label21);
        methodVisitor.visitVarInsn(ALOAD,v12);
        methodVisitor.visitVarInsn(ALOAD,v9);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
        Label label24 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label24);
        Label label25 = new Label();
        methodVisitor.visitLabel(label25);
        methodVisitor.visitLineNumber(115, label25);
        methodVisitor.visitLdcInsn("NaN");
        methodVisitor.visitVarInsn(ASTORE,v12);
        methodVisitor.visitLabel(label24);
        methodVisitor.visitLineNumber(116, label24);
        methodVisitor.visitVarInsn(ALOAD,v12);
        methodVisitor.visitVarInsn(ALOAD,v10);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
        Label label26 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label26);
        Label label27 = new Label();
        methodVisitor.visitLabel(label27);
        methodVisitor.visitLineNumber(117, label27);
        methodVisitor.visitLdcInsn("Infinity");
        methodVisitor.visitVarInsn(ASTORE,v12);
        methodVisitor.visitLabel(label26);
        methodVisitor.visitLineNumber(118, label26);
        methodVisitor.visitVarInsn(ALOAD,v12);
        methodVisitor.visitLdcInsn("\u221e");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
        Label label28 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label28);
        Label label29 = new Label();
        methodVisitor.visitLabel(label29);
        methodVisitor.visitLineNumber(119, label29);
        methodVisitor.visitLdcInsn("Infinity");
        methodVisitor.visitVarInsn(ASTORE,v12);
        methodVisitor.visitLabel(label28);
        methodVisitor.visitLineNumber(120, label28);
        methodVisitor.visitVarInsn(ILOAD,v13);
        Label label30 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label30);
        Label label31 = new Label();
        methodVisitor.visitLabel(label31);
        methodVisitor.visitLineNumber(121, label31);
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitLdcInsn("-");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ALOAD,v12);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE,v12);
        methodVisitor.visitLabel(label30);
        methodVisitor.visitLineNumber(123, label30);
        methodVisitor.visitVarInsn(ALOAD,v11);
        methodVisitor.visitVarInsn(ALOAD,v12);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/regex/Pattern", "matcher", "(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;", false);

        int v15 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v15);
        Label label32 = new Label();
        methodVisitor.visitLabel(label32);
        methodVisitor.visitLineNumber(124, label32);
        methodVisitor.visitVarInsn(ALOAD,v15);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/regex/Matcher", "find", "()Z", false);
        methodVisitor.visitJumpInsn(IFEQ, label1);
        Label label33 = new Label();
        methodVisitor.visitLabel(label33);
        methodVisitor.visitLineNumber(125, label33);
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);

        int v16 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v16);
        Label label34 = new Label();
        methodVisitor.visitLabel(label34);
        methodVisitor.visitLineNumber(126, label34);
        methodVisitor.visitInsn(ICONST_0);

        int v17 = ++index;
        methodVisitor.visitVarInsn(ISTORE,v17);
        Label label35 = new Label();
        methodVisitor.visitLabel(label35);
        methodVisitor.visitVarInsn(ILOAD,v17);
        methodVisitor.visitVarInsn(ALOAD,v12);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
        Label label36 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPGE, label36);
        Label label37 = new Label();
        methodVisitor.visitLabel(label37);
        methodVisitor.visitLineNumber(127, label37);
        methodVisitor.visitVarInsn(ALOAD,v12);
        methodVisitor.visitVarInsn(ILOAD,v17);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "charAt", "(I)C", false);

        int v18 = ++index;
        methodVisitor.visitVarInsn(ISTORE,v18);
        Label label38 = new Label();
        methodVisitor.visitLabel(label38);
        methodVisitor.visitLineNumber(128, label38);
        methodVisitor.visitVarInsn(ILOAD,v18);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Character", "isDigit", "(C)Z", false);
        Label label39 = new Label();
        methodVisitor.visitJumpInsn(IFEQ, label39);
        Label label40 = new Label();
        methodVisitor.visitLabel(label40);
        methodVisitor.visitLineNumber(129, label40);
        methodVisitor.visitVarInsn(ILOAD,v18);
        methodVisitor.visitIntInsn(BIPUSH, 10);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Character", "digit", "(CI)I", false);

        int v19 = ++index;
        methodVisitor.visitVarInsn(ISTORE,v19);
        Label label41 = new Label();
        methodVisitor.visitLabel(label41);
        methodVisitor.visitLineNumber(130, label41);
        methodVisitor.visitVarInsn(ILOAD,v19);
        methodVisitor.visitInsn(ICONST_M1);
        Label label42 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPEQ, label42);
        Label label43 = new Label();
        methodVisitor.visitLabel(label43);
        methodVisitor.visitLineNumber(131, label43);
        methodVisitor.visitVarInsn(ALOAD,v16);
        methodVisitor.visitVarInsn(ILOAD,v19);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitInsn(POP);
        Label label44 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label44);
        methodVisitor.visitLabel(label42);
        methodVisitor.visitLineNumber(133, label42);
        methodVisitor.visitVarInsn(ALOAD,v16);
        methodVisitor.visitVarInsn(ILOAD,v18);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(C)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitInsn(POP);
        methodVisitor.visitLabel(label44);
        methodVisitor.visitLineNumber(134, label44);
        Label label45 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label45);
        methodVisitor.visitLabel(label39);
        methodVisitor.visitLineNumber(135, label39);
        methodVisitor.visitVarInsn(ALOAD,v16);
        methodVisitor.visitVarInsn(ILOAD,v18);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(C)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitInsn(POP);
        methodVisitor.visitLabel(label45);
        methodVisitor.visitLineNumber(126, label45);
        methodVisitor.visitIincInsn(v17, 1);
        methodVisitor.visitJumpInsn(GOTO, label35);
        methodVisitor.visitLabel(label36);
        methodVisitor.visitLineNumber(138, label36);
        methodVisitor.visitVarInsn(ALOAD,v16);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE,v12);
        methodVisitor.visitLabel(label1);
        methodVisitor.visitLineNumber(143, label1);

    }
}
