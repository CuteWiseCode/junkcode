package com.me.plugin.templates.modity;

import static org.objectweb.asm.Opcodes.*;

import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;

public class Template20 {

    public static void  modifyFromCode(MethodVisitor methodVisitor,int index){

        Label label0 = new Label();
        Label label1 = new Label();
        Label label2 = new Label();
        methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/io/FileNotFoundException");
        Label label3 = new Label();
        Label label4 = new Label();
        Label label5 = new Label();
        methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/io/IOException");
        Label label6 = new Label();
        methodVisitor.visitLabel(label6);
        methodVisitor.visitLineNumber(96, label6);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/nio/charset/Charset", "defaultCharset", "()Ljava/nio/charset/Charset;", false);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "identityHashCode", "(Ljava/lang/Object;)I", false);
        methodVisitor.visitInsn(I2L);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "nanoTime", "()J", false);
        methodVisitor.visitInsn(LAND);
        methodVisitor.visitInsn(LCONST_0);
        methodVisitor.visitInsn(LCMP);
        Label label7 = new Label();
        methodVisitor.visitJumpInsn(IFNE, label7);
        Label label8 = new Label();
        methodVisitor.visitLabel(label8);
        methodVisitor.visitLineNumber(97, label8);
        methodVisitor.visitInsn(ACONST_NULL);
        int v1 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v1);
        methodVisitor.visitLabel(label0);
        methodVisitor.visitLineNumber(99, label0);
        methodVisitor.visitTypeInsn(NEW, "java/io/BufferedReader");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitTypeInsn(NEW, "java/io/FileReader");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitLdcInsn("foo.in");
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/FileReader", "<init>", "(Ljava/lang/String;)V", false);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/io/BufferedReader", "<init>", "(Ljava/io/Reader;)V", false);
        methodVisitor.visitVarInsn(ASTORE,v1);
        methodVisitor.visitLabel(label1);
        methodVisitor.visitLineNumber(102, label1);
        Label label9 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label9);
        methodVisitor.visitLabel(label2);
        methodVisitor.visitLineNumber(100, label2);

        int v2 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v2);
        Label label10 = new Label();
        methodVisitor.visitLabel(label10);
        methodVisitor.visitLineNumber(101, label10);
        methodVisitor.visitVarInsn(ALOAD,v2);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/FileNotFoundException", "printStackTrace", "()V", false);
        methodVisitor.visitLabel(label9);
        methodVisitor.visitLineNumber(103, label9);
        methodVisitor.visitTypeInsn(NEW, "java/util/ArrayList");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", false);
        methodVisitor.visitVarInsn(ASTORE,v2);
        Label label11 = new Label();
        methodVisitor.visitLabel(label11);
        methodVisitor.visitLineNumber(104, label11);
        methodVisitor.visitInsn(ACONST_NULL);

        int v3 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v3);
        methodVisitor.visitLabel(label3);
        methodVisitor.visitLineNumber(106, label3);
        methodVisitor.visitVarInsn(ALOAD,v1);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/BufferedReader", "readLine", "()Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE,v3);
        methodVisitor.visitLabel(label4);
        methodVisitor.visitLineNumber(109, label4);
        Label label12 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label12);
        methodVisitor.visitLabel(label5);
        methodVisitor.visitLineNumber(107, label5);

        int v4 = ++index;
        methodVisitor.visitVarInsn(ASTORE,v4);
        Label label13 = new Label();
        methodVisitor.visitLabel(label13);
        methodVisitor.visitLineNumber(108, label13);
        methodVisitor.visitVarInsn(ALOAD,v4);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/IOException", "printStackTrace", "()V", false);
        methodVisitor.visitLabel(label12);
        methodVisitor.visitLineNumber(110, label12);
        methodVisitor.visitVarInsn(ALOAD,v3);
        methodVisitor.visitIntInsn(BIPUSH, 35);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(I)I", false);
        methodVisitor.visitVarInsn(ISTORE,v4);
        Label label14 = new Label();
        methodVisitor.visitLabel(label14);
        methodVisitor.visitLineNumber(111, label14);
        methodVisitor.visitVarInsn(ILOAD,v4);
        Label label15 = new Label();
        methodVisitor.visitJumpInsn(IFLT, label15);
        methodVisitor.visitVarInsn(ALOAD,v3);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ILOAD,v4);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE,v3);
        methodVisitor.visitLabel(label15);
        methodVisitor.visitLineNumber(112, label15);
        methodVisitor.visitVarInsn(ALOAD,v3);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "trim", "()Ljava/lang/String;", false);
        methodVisitor.visitVarInsn(ASTORE,v3);
        Label label16 = new Label();
        methodVisitor.visitLabel(label16);
        methodVisitor.visitLineNumber(113, label16);
        methodVisitor.visitVarInsn(ALOAD,v3);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);

        int v5 = ++index;
        methodVisitor.visitVarInsn(ISTORE,v5);
        Label label17 = new Label();
        methodVisitor.visitLabel(label17);
        methodVisitor.visitLineNumber(114, label17);
        methodVisitor.visitVarInsn(ILOAD,v5);
        methodVisitor.visitJumpInsn(IFEQ, label7);
        Label label18 = new Label();
        methodVisitor.visitLabel(label18);
        methodVisitor.visitLineNumber(115, label18);
        methodVisitor.visitVarInsn(ALOAD,v3);
        methodVisitor.visitIntInsn(BIPUSH, 32);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(I)I", false);
        Label label19 = new Label();
        methodVisitor.visitJumpInsn(IFGE, label19);
        methodVisitor.visitVarInsn(ALOAD,v3);
        methodVisitor.visitIntInsn(BIPUSH, 9);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(I)I", false);
        Label label20 = new Label();
        methodVisitor.visitJumpInsn(IFLT, label20);
        methodVisitor.visitLabel(label19);
        methodVisitor.visitLineNumber(116, label19);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitLdcInsn("Illegal configuration-file syntax");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        methodVisitor.visitLabel(label20);
        methodVisitor.visitLineNumber(117, label20);
        methodVisitor.visitVarInsn(ALOAD,v3);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "codePointAt", "(I)I", false);


        int v6 = ++index;
        methodVisitor.visitVarInsn(ISTORE, v6);
        Label label21 = new Label();
        methodVisitor.visitLabel(label21);
        methodVisitor.visitLineNumber(118, label21);
        methodVisitor.visitVarInsn(ILOAD, v6);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Character", "isJavaIdentifierStart", "(I)Z", false);
        Label label22 = new Label();
        methodVisitor.visitJumpInsn(IFNE, label22);
        Label label23 = new Label();
        methodVisitor.visitLabel(label23);
        methodVisitor.visitLineNumber(119, label23);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitLdcInsn("Illegal provider-class name: ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ALOAD,v3);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        methodVisitor.visitLabel(label22);
        methodVisitor.visitLineNumber(120, label22);
        methodVisitor.visitVarInsn(ILOAD, v6);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Character", "charCount", "(I)I", false);

        int v7 = ++index;
        methodVisitor.visitVarInsn(ISTORE,v7);
        Label label24 = new Label();
        methodVisitor.visitLabel(label24);
        methodVisitor.visitVarInsn(ILOAD,v7);
        methodVisitor.visitVarInsn(ILOAD,v5);
        Label label25 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPGE, label25);
        Label label26 = new Label();
        methodVisitor.visitLabel(label26);
        methodVisitor.visitLineNumber(121, label26);
        methodVisitor.visitVarInsn(ALOAD,v3);
        methodVisitor.visitVarInsn(ILOAD,v7);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "codePointAt", "(I)I", false);
        methodVisitor.visitVarInsn(ISTORE,v6);
        Label label27 = new Label();
        methodVisitor.visitLabel(label27);
        methodVisitor.visitLineNumber(122, label27);
        methodVisitor.visitVarInsn(ILOAD,v6);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Character", "isJavaIdentifierPart", "(I)Z", false);
        Label label28 = new Label();
        methodVisitor.visitJumpInsn(IFNE, label28);
        methodVisitor.visitVarInsn(ILOAD,v6);
        methodVisitor.visitIntInsn(BIPUSH, 46);
        methodVisitor.visitJumpInsn(IF_ICMPEQ, label28);
        Label label29 = new Label();
        methodVisitor.visitLabel(label29);
        methodVisitor.visitLineNumber(123, label29);
        methodVisitor.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitLdcInsn("Illegal provider-class name: ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ALOAD,v3);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        methodVisitor.visitLabel(label28);
        methodVisitor.visitLineNumber(120, label28);
        methodVisitor.visitVarInsn(ILOAD,v7);
        methodVisitor.visitVarInsn(ILOAD,v6);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Character", "charCount", "(I)I", false);
        methodVisitor.visitInsn(IADD);
        methodVisitor.visitVarInsn(ISTORE,v7);
        methodVisitor.visitJumpInsn(GOTO, label24);
        methodVisitor.visitLabel(label25);
        methodVisitor.visitLineNumber(125, label25);
        methodVisitor.visitVarInsn(ALOAD,v2);
        methodVisitor.visitVarInsn(ALOAD,v3);
        methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
        methodVisitor.visitInsn(POP);
        methodVisitor.visitLabel(label7);
        methodVisitor.visitLineNumber(129, label7);

    }
}
