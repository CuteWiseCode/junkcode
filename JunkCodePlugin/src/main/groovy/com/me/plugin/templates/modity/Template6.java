package com.me.plugin.templates.modity;

import static org.objectweb.asm.Opcodes.*;


import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;

public class Template6 {

    public static void  modifyFromCode(MethodVisitor methodVisitor,int index){

        Label label0 = new Label();
        Label label1 = new Label();
        Label label2 = new Label();
        methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/io/UnsupportedEncodingException");
        Label label3 = new Label();
        Label label4 = new Label();
        Label label5 = new Label();
        methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/lang/NumberFormatException");
        Label label6 = new Label();
        methodVisitor.visitLabel(label6);
        methodVisitor.visitLineNumber(36, label6);
        methodVisitor.visitLdcInsn(2147483647L);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "android/os/SystemClock", "elapsedRealtime", "()J", false);
        methodVisitor.visitInsn(LAND);
        methodVisitor.visitInsn(LCONST_0);
        methodVisitor.visitInsn(LCMP);
        Label label7 = new Label();
        methodVisitor.visitJumpInsn(IFNE, label7);
        Label label8 = new Label();
        methodVisitor.visitLabel(label8);
        methodVisitor.visitLineNumber(37, label8);
        methodVisitor.visitLdcInsn("https://www.baidu.com");
        int v0 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v0);
        Label label9 = new Label();
        methodVisitor.visitLabel(label9);
        methodVisitor.visitLineNumber(38, label9);
        methodVisitor.visitLdcInsn("utf-8");

        int v1 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v1);
        Label label10 = new Label();
        methodVisitor.visitLabel(label10);
        methodVisitor.visitLineNumber(39, label10);
        methodVisitor.visitInsn(ICONST_0);

        int v2 = ++index;
        methodVisitor.visitVarInsn(ISTORE, v2);
        Label label11 = new Label();
        methodVisitor.visitLabel(label11);
        methodVisitor.visitLineNumber(40, label11);
        methodVisitor.visitVarInsn(ALOAD, v0);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);

        int v3 = ++index;
        methodVisitor.visitVarInsn(ISTORE, v3);
        Label label12 = new Label();
        methodVisitor.visitLabel(label12);
        methodVisitor.visitLineNumber(41, label12);
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitVarInsn(ILOAD, v3);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(I)V", false);

        int v4 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v4);
        Label label13 = new Label();
        methodVisitor.visitLabel(label13);
        methodVisitor.visitLineNumber(42, label13);
        methodVisitor.visitInsn(ICONST_0);

        int v5 = ++index;
        methodVisitor.visitVarInsn(ISTORE, v5);
        Label label14 = new Label();
        methodVisitor.visitLabel(label14);
        methodVisitor.visitLineNumber(45, label14);
        methodVisitor.visitInsn(ACONST_NULL);

        int v7 = ++index;
        methodVisitor.visitVarInsn(ASTORE, v7);
        Label label15 = new Label();
        methodVisitor.visitLabel(label15);
        methodVisitor.visitLineNumber(46, label15);
        methodVisitor.visitFrame(Opcodes.F_NEW, 8, new Object[]{"java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/StringBuilder", Opcodes.INTEGER, Opcodes.TOP, "[B"}, 0, new Object[]{});
        methodVisitor.visitVarInsn(ILOAD, v5);
        methodVisitor.visitVarInsn(ILOAD, v3);
        methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
        Label label16 = new Label();
        methodVisitor.visitLabel(label16);
        methodVisitor.visitLineNumber(47, label16);
        methodVisitor.visitVarInsn(ALOAD, v0);
        methodVisitor.visitVarInsn(ILOAD, v5);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "charAt", "(I)C", false);

        int v6 = ++index;
        methodVisitor.visitVarInsn(ISTORE, v6);
        Label label17 = new Label();
        methodVisitor.visitLabel(label17);
        methodVisitor.visitLineNumber(48, label17);
        methodVisitor.visitVarInsn(ILOAD, v6);
        Label label18 = new Label();
        Label label19 = new Label();
        methodVisitor.visitLookupSwitchInsn(label19, new int[]{37, 43}, new Label[]{label3, label18});
        methodVisitor.visitLabel(label18);
        methodVisitor.visitLineNumber(50, label18);
        methodVisitor.visitFrame(Opcodes.F_NEW, 8, new Object[]{"java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/StringBuilder", Opcodes.INTEGER, Opcodes.INTEGER, "[B"}, 0, new Object[]{});
        methodVisitor.visitVarInsn(ALOAD, v4);
        methodVisitor.visitIntInsn(BIPUSH, 32);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(C)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitInsn(POP);
        Label label20 = new Label();
        methodVisitor.visitLabel(label20);
        methodVisitor.visitLineNumber(51, label20);
        methodVisitor.visitIincInsn(v5, 1);
        Label label21 = new Label();
        methodVisitor.visitLabel(label21);
        methodVisitor.visitLineNumber(52, label21);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitVarInsn(ISTORE, v2);
        Label label22 = new Label();
        methodVisitor.visitLabel(label22);
        methodVisitor.visitLineNumber(53, label22);
        methodVisitor.visitJumpInsn(GOTO, label15);
        methodVisitor.visitLabel(label3);
        methodVisitor.visitLineNumber(57, label3);
        methodVisitor.visitFrame(Opcodes.F_NEW, 8, new Object[]{"java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/StringBuilder", Opcodes.INTEGER, Opcodes.INTEGER, "[B"}, 0, new Object[]{});
        methodVisitor.visitVarInsn(ALOAD, v7);
        Label label23 = new Label();
        methodVisitor.visitJumpInsn(IFNONNULL, label23);
        Label label24 = new Label();
        methodVisitor.visitLabel(label24);
        methodVisitor.visitLineNumber(58, label24);
        methodVisitor.visitVarInsn(ILOAD, v3);
        methodVisitor.visitVarInsn(ILOAD, v5);
        methodVisitor.visitInsn(ISUB);
        methodVisitor.visitInsn(ICONST_3);
        methodVisitor.visitInsn(IDIV);
        methodVisitor.visitIntInsn(NEWARRAY, T_BYTE);
        methodVisitor.visitVarInsn(ASTORE, v7);
        methodVisitor.visitLabel(label23);
        methodVisitor.visitLineNumber(59, label23);
        methodVisitor.visitFrame(Opcodes.F_NEW, 8, new Object[]{"java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/StringBuilder", Opcodes.INTEGER, Opcodes.INTEGER, "[B"}, 0, new Object[]{});
        methodVisitor.visitInsn(ICONST_0);

        int v8 = ++index;
        methodVisitor.visitVarInsn(ISTORE, v8);
        Label label25 = new Label();
        methodVisitor.visitLabel(label25);
        methodVisitor.visitLineNumber(61, label25);
        methodVisitor.visitFrame(Opcodes.F_NEW, 9, new Object[]{"java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/StringBuilder", Opcodes.INTEGER, Opcodes.INTEGER, "[B", Opcodes.INTEGER}, 0, new Object[]{});
        methodVisitor.visitVarInsn(ILOAD, v5);
        methodVisitor.visitInsn(ICONST_2);
        methodVisitor.visitInsn(IADD);
        methodVisitor.visitVarInsn(ILOAD, v3);
        Label label26 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPGE, label26);
        methodVisitor.visitVarInsn(ILOAD, v6);
        methodVisitor.visitIntInsn(BIPUSH, 37);
        methodVisitor.visitJumpInsn(IF_ICMPNE, label26);
        Label label27 = new Label();
        methodVisitor.visitLabel(label27);
        methodVisitor.visitLineNumber(63, label27);
        methodVisitor.visitVarInsn(ALOAD, v0);
        methodVisitor.visitVarInsn(ILOAD, v5);
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitInsn(IADD);
        methodVisitor.visitVarInsn(ILOAD, v5);
        methodVisitor.visitInsn(ICONST_3);
        methodVisitor.visitInsn(IADD);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
        methodVisitor.visitIntInsn(BIPUSH, 16);
        methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "parseInt", "(Ljava/lang/String;I)I", false);

        int v9 = ++index;
        methodVisitor.visitVarInsn(ISTORE, v9);
        Label label28 = new Label();
        methodVisitor.visitLabel(label28);
        methodVisitor.visitLineNumber(64, label28);
        methodVisitor.visitVarInsn(ILOAD, v9);
        Label label29 = new Label();
        methodVisitor.visitJumpInsn(IFGE, label29);
        Label label30 = new Label();
        methodVisitor.visitLabel(label30);
        methodVisitor.visitLineNumber(65, label30);
        methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalArgumentException");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitLdcInsn("URLDecoder: Illegal hex characters in escape (%) pattern - negative value : ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ALOAD, v0);
        methodVisitor.visitVarInsn(ILOAD, v5);
        methodVisitor.visitVarInsn(ILOAD, v5);
        methodVisitor.visitInsn(ICONST_3);
        methodVisitor.visitInsn(IADD);
        Label label31 = new Label();
        methodVisitor.visitLabel(label31);
        methodVisitor.visitLineNumber(66, label31);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalArgumentException", "<init>", "(Ljava/lang/String;)V", false);
        methodVisitor.visitInsn(ATHROW);
        methodVisitor.visitLabel(label29);
        methodVisitor.visitLineNumber(67, label29);
        methodVisitor.visitFrame(Opcodes.F_NEW, 10, new Object[]{"java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/StringBuilder", Opcodes.INTEGER, Opcodes.INTEGER, "[B", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
        methodVisitor.visitVarInsn(ALOAD, v7);
        methodVisitor.visitVarInsn(ILOAD, v8);
        methodVisitor.visitIincInsn(v8, 1);
        methodVisitor.visitVarInsn(ILOAD, v9);
        methodVisitor.visitInsn(I2B);
        methodVisitor.visitInsn(BASTORE);
        Label label32 = new Label();
        methodVisitor.visitLabel(label32);
        methodVisitor.visitLineNumber(68, label32);
        methodVisitor.visitIincInsn(v5, 3);
        Label label33 = new Label();
        methodVisitor.visitLabel(label33);
        methodVisitor.visitLineNumber(69, label33);
        methodVisitor.visitVarInsn(ILOAD, v5);
        methodVisitor.visitVarInsn(ILOAD, v3);
        Label label34 = new Label();
        methodVisitor.visitJumpInsn(IF_ICMPGE, label34);
        Label label35 = new Label();
        methodVisitor.visitLabel(label35);
        methodVisitor.visitLineNumber(70, label35);
        methodVisitor.visitVarInsn(ALOAD, v0);
        methodVisitor.visitVarInsn(ILOAD, v5);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "charAt", "(I)C", false);
        methodVisitor.visitVarInsn(ISTORE, v6);
        methodVisitor.visitLabel(label34);
        methodVisitor.visitLineNumber(71, label34);
        methodVisitor.visitFrame(Opcodes.F_NEW, 9, new Object[]{"java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/StringBuilder", Opcodes.INTEGER, Opcodes.INTEGER, "[B", Opcodes.INTEGER}, 0, new Object[]{});
        methodVisitor.visitJumpInsn(GOTO, label25);
        methodVisitor.visitLabel(label26);
        methodVisitor.visitLineNumber(73, label26);
        methodVisitor.visitFrame(Opcodes.F_NEW, 9, new Object[]{"java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/StringBuilder", Opcodes.INTEGER, Opcodes.INTEGER, "[B", Opcodes.INTEGER}, 0, new Object[]{});
        methodVisitor.visitVarInsn(ILOAD, v5);
        methodVisitor.visitVarInsn(ILOAD, v3);
        methodVisitor.visitJumpInsn(IF_ICMPGE, label0);
        methodVisitor.visitVarInsn(ILOAD, v6);
        methodVisitor.visitIntInsn(BIPUSH, 37);
        methodVisitor.visitJumpInsn(IF_ICMPNE, label0);
        Label label36 = new Label();
        methodVisitor.visitLabel(label36);
        methodVisitor.visitLineNumber(74, label36);
        methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalArgumentException");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitLdcInsn("URLDecoder: Incomplete trailing escape (%) pattern");
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalArgumentException", "<init>", "(Ljava/lang/String;)V", false);
        methodVisitor.visitInsn(ATHROW);
        methodVisitor.visitLabel(label0);
        methodVisitor.visitLineNumber(78, label0);
        methodVisitor.visitFrame(Opcodes.F_NEW, 9, new Object[]{"java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/StringBuilder", Opcodes.INTEGER, Opcodes.INTEGER, "[B", Opcodes.INTEGER}, 0, new Object[]{});
        methodVisitor.visitVarInsn(ALOAD, v4);
        methodVisitor.visitTypeInsn(NEW, "java/lang/String");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitVarInsn(ALOAD, v7);
        methodVisitor.visitInsn(ICONST_0);
        methodVisitor.visitVarInsn(ILOAD, v8);
        methodVisitor.visitVarInsn(ALOAD, v1);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/String", "<init>", "([BIILjava/lang/String;)V", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitInsn(POP);
        methodVisitor.visitLabel(label1);
        methodVisitor.visitLineNumber(81, label1);
        methodVisitor.visitJumpInsn(GOTO, label4);
        methodVisitor.visitLabel(label2);
        methodVisitor.visitLineNumber(79, label2);
        methodVisitor.visitFrame(Opcodes.F_NEW, 9, new Object[]{"java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/StringBuilder", Opcodes.INTEGER, Opcodes.INTEGER, "[B", Opcodes.INTEGER}, 1, new Object[]{"java/io/UnsupportedEncodingException"});
        methodVisitor.visitVarInsn(ASTORE, v9);
        Label label37 = new Label();
        methodVisitor.visitLabel(label37);
        methodVisitor.visitLineNumber(80, label37);
        methodVisitor.visitVarInsn(ALOAD, v9);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/io/UnsupportedEncodingException", "printStackTrace", "()V", false);
        methodVisitor.visitLabel(label4);
        methodVisitor.visitLineNumber(86, label4);
        methodVisitor.visitFrame(Opcodes.F_NEW, 8, new Object[]{"java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/StringBuilder", Opcodes.INTEGER, Opcodes.INTEGER, "[B"}, 0, new Object[]{});
        Label label38 = new Label();
        methodVisitor.visitJumpInsn(GOTO, label38);
        methodVisitor.visitLabel(label5);
        methodVisitor.visitLineNumber(82, label5);
        methodVisitor.visitFrame(Opcodes.F_NEW, 8, new Object[]{"java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/StringBuilder", Opcodes.INTEGER, Opcodes.INTEGER, "[B"}, 1, new Object[]{"java/lang/NumberFormatException"});
        methodVisitor.visitVarInsn(ASTORE, v8);
        Label label39 = new Label();
        methodVisitor.visitLabel(label39);
        methodVisitor.visitLineNumber(83, label39);
        methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalArgumentException");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
        methodVisitor.visitInsn(DUP);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        methodVisitor.visitLdcInsn("URLDecoder: Illegal hex characters in escape (%) pattern - ");
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitVarInsn(ALOAD, v8);
        Label label40 = new Label();
        methodVisitor.visitLabel(label40);
        methodVisitor.visitLineNumber(85, label40);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/NumberFormatException", "getMessage", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalArgumentException", "<init>", "(Ljava/lang/String;)V", false);
        methodVisitor.visitInsn(ATHROW);
        methodVisitor.visitLabel(label38);
        methodVisitor.visitLineNumber(87, label38);
        methodVisitor.visitFrame(Opcodes.F_NEW, 8, new Object[]{"java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/StringBuilder", Opcodes.INTEGER, Opcodes.INTEGER, "[B"}, 0, new Object[]{});
        methodVisitor.visitInsn(ICONST_1);
        methodVisitor.visitVarInsn(ISTORE, v2);
        Label label41 = new Label();
        methodVisitor.visitLabel(label41);
        methodVisitor.visitLineNumber(88, label41);
        methodVisitor.visitJumpInsn(GOTO, label15);
        methodVisitor.visitLabel(label19);
        methodVisitor.visitLineNumber(90, label19);
        methodVisitor.visitFrame(Opcodes.F_NEW, 8, new Object[]{"java/lang/String", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/StringBuilder", Opcodes.INTEGER, Opcodes.INTEGER, "[B"}, 0, new Object[]{});
        methodVisitor.visitVarInsn(ALOAD, v4);
        methodVisitor.visitVarInsn(ILOAD, v6);
        methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(C)Ljava/lang/StringBuilder;", false);
        methodVisitor.visitInsn(POP);
        Label label42 = new Label();
        methodVisitor.visitLabel(label42);
        methodVisitor.visitLineNumber(91, label42);
        methodVisitor.visitIincInsn(v5, 1);
        Label label43 = new Label();
        methodVisitor.visitLabel(label43);
        methodVisitor.visitLineNumber(92, label43);
        methodVisitor.visitJumpInsn(GOTO, label15);
        methodVisitor.visitLabel(label7);
        methodVisitor.visitLineNumber(97, label7);
        methodVisitor.visitFrame(Opcodes.F_NEW, 0, new Object[]{}, 0, new Object[]{});


    }
}
